Running Viz Embeddings
################## PARAMS LOADED #################
Loaded Model
torch.Size([128, 32])
torch.Size([128])
torch.Size([128, 128])
torch.Size([128])
torch.Size([128, 128])
torch.Size([128])
torch.Size([16, 128])
torch.Size([16])
torch.Size([128, 29])
torch.Size([128, 128])
torch.Size([128])
torch.Size([128])
torch.Size([9, 128])
torch.Size([9])
torch.Size([128, 128])
torch.Size([128])
torch.Size([64, 128])
torch.Size([64])
torch.Size([9, 64])
torch.Size([9])
center :  torch.Size([32])
weights :  torch.Size([100, 16])
hidden :  torch.Size([1, 100, 128])
Batched Inputs torch.Size([100, 13])
Initial canvas
[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
Timestep :  0
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
Hitting a wall, returning same state ...
[[1.  1.  1.  1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  1.  1.  1. ]]
Batched Inputs torch.Size([100, 13])
Timestep :  1
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.  1.  1.  1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  1.  1.  1. ]]
Hitting a wall, returning same state ...
[[1.   1.   1.   1.   1.  ]
 [1.   1.   0.91 1.   1.  ]
 [1.   0.9  0.81 0.9  1.  ]
 [1.   1.   0.91 1.   1.  ]
 [1.   1.   1.   1.   1.  ]]
Batched Inputs torch.Size([100, 13])
Timestep :  2
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.   1.   1.   1.   1.  ]
 [1.   1.   0.91 1.   1.  ]
 [1.   0.9  0.81 0.9  1.  ]
 [1.   1.   0.91 1.   1.  ]
 [1.   1.   1.   1.   1.  ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    1.    0.819 1.    1.   ]
 [1.    0.91  0.729 0.91  1.   ]
 [1.    1.    0.819 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  3
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    1.    0.819 1.    1.   ]
 [1.    0.91  0.729 0.91  1.   ]
 [1.    1.    0.819 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.9   0.837 0.9   1.   ]
 [1.    0.919 0.656 0.919 1.   ]
 [1.    1.    0.737 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  4
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.9   0.837 0.9   1.   ]
 [1.    0.919 0.656 0.919 1.   ]
 [1.    1.    0.737 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.81  0.853 0.91  1.   ]
 [1.    0.927 0.59  0.927 1.   ]
 [1.    1.    0.663 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  5
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.81  0.853 0.91  1.   ]
 [1.    0.927 0.59  0.927 1.   ]
 [1.    1.    0.663 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.729 0.868 0.819 1.   ]
 [1.    0.934 0.531 0.934 1.   ]
 [1.    1.    0.597 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  6
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.729 0.868 0.819 1.   ]
 [1.    0.934 0.531 0.934 1.   ]
 [1.    1.    0.597 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.656 0.881 0.837 1.   ]
 [1.    0.941 0.478 0.941 1.   ]
 [1.    1.    0.537 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  7
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.656 0.881 0.837 1.   ]
 [1.    0.941 0.478 0.941 1.   ]
 [1.    1.    0.537 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.59  0.893 0.753 1.   ]
 [1.    0.947 0.43  0.947 1.   ]
 [1.    1.    0.484 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  8
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.59  0.893 0.753 1.   ]
 [1.    0.947 0.43  0.947 1.   ]
 [1.    1.    0.484 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.59  0.893 0.753 1.   ]
 [1.    0.852 0.487 0.852 1.   ]
 [1.    1.    0.435 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  9
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.59  0.893 0.753 1.   ]
 [1.    0.852 0.487 0.852 1.   ]
 [1.    1.    0.435 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Next state :  (2, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.531 0.904 0.778 1.   ]
 [1.    0.867 0.439 0.867 1.   ]
 [1.    1.    0.392 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  10
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.531 0.904 0.778 1.   ]
 [1.    0.867 0.439 0.867 1.   ]
 [1.    1.    0.392 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.478 0.913 0.7   1.   ]
 [1.    0.88  0.395 0.88  1.   ]
 [1.    1.    0.353 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  11
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.478 0.913 0.7   1.   ]
 [1.    0.88  0.395 0.88  1.   ]
 [1.    1.    0.353 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.892 0.355 0.892 1.   ]
 [1.    1.    0.317 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  12
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.892 0.355 0.892 1.   ]
 [1.    1.    0.317 1.    1.   ]
 [1.    1.    0.9   1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.803 0.42  0.903 1.   ]
 [1.    1.    0.286 1.    1.   ]
 [1.    1.    0.81  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  13
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.803 0.42  0.903 1.   ]
 [1.    1.    0.286 1.    1.   ]
 [1.    1.    0.81  1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.723 0.478 0.913 1.   ]
 [1.    1.    0.257 1.    1.   ]
 [1.    1.    0.729 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  14
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.723 0.478 0.913 1.   ]
 [1.    1.    0.257 1.    1.   ]
 [1.    1.    0.729 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.65  0.53  0.821 1.   ]
 [1.    1.    0.231 1.    1.   ]
 [1.    1.    0.656 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  15
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.65  0.53  0.821 1.   ]
 [1.    1.    0.231 1.    1.   ]
 [1.    1.    0.656 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.585 0.577 0.739 1.   ]
 [1.    1.    0.208 1.    1.   ]
 [1.    1.    0.59  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  16
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.585 0.577 0.739 1.   ]
 [1.    1.    0.208 1.    1.   ]
 [1.    1.    0.59  1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.527 0.619 0.665 1.   ]
 [1.    1.    0.187 1.    1.   ]
 [1.    1.    0.531 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  17
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.527 0.619 0.665 1.   ]
 [1.    1.    0.187 1.    1.   ]
 [1.    1.    0.531 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    1.    0.169 1.    1.   ]
 [1.    1.    0.478 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  18
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    1.    0.169 1.    1.   ]
 [1.    1.    0.478 1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    0.9   0.252 0.9   1.   ]
 [1.    1.    0.43  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  19
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    0.9   0.252 0.9   1.   ]
 [1.    1.    0.43  1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    0.81  0.327 0.81  1.   ]
 [1.    1.    0.387 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  20
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.43  0.922 0.63  1.   ]
 [1.    0.474 0.657 0.599 1.   ]
 [1.    0.81  0.327 0.81  1.   ]
 [1.    1.    0.387 1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.387 0.93  0.567 1.   ]
 [1.    0.527 0.592 0.639 1.   ]
 [1.    0.829 0.294 0.829 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  21
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.387 0.93  0.567 1.   ]
 [1.    0.527 0.592 0.639 1.   ]
 [1.    0.829 0.294 0.829 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.349 0.937 0.61  1.   ]
 [1.    0.574 0.532 0.675 1.   ]
 [1.    0.846 0.365 0.846 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  22
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.349 0.937 0.61  1.   ]
 [1.    0.574 0.532 0.675 1.   ]
 [1.    0.846 0.365 0.846 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.617 0.479 0.708 1.   ]
 [1.    0.861 0.328 0.861 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  23
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.617 0.479 0.708 1.   ]
 [1.    0.861 0.328 0.861 1.   ]
 [1.    1.    0.387 1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.555 0.531 0.737 1.   ]
 [1.    0.875 0.295 0.875 1.   ]
 [1.    1.    0.349 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  24
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.555 0.531 0.737 1.   ]
 [1.    0.875 0.295 0.875 1.   ]
 [1.    1.    0.349 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.5   0.578 0.663 1.   ]
 [1.    0.888 0.266 0.888 1.   ]
 [1.    1.    0.314 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  25
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.5   0.578 0.663 1.   ]
 [1.    0.888 0.266 0.888 1.   ]
 [1.    1.    0.314 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.45  0.62  0.697 1.   ]
 [1.    0.899 0.239 0.899 1.   ]
 [1.    1.    0.282 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  26
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.45  0.62  0.697 1.   ]
 [1.    0.899 0.239 0.899 1.   ]
 [1.    1.    0.282 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.909 0.215 0.909 1.   ]
 [1.    1.    0.254 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  27
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.909 0.215 0.909 1.   ]
 [1.    1.    0.254 1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.818 0.294 0.818 1.   ]
 [1.    1.    0.229 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  28
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.818 0.294 0.818 1.   ]
 [1.    1.    0.229 1.    1.   ]]
Crossing borders, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.736 0.364 0.836 1.   ]
 [1.    1.    0.206 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  29
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.736 0.364 0.836 1.   ]
 [1.    1.    0.206 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.663 0.428 0.853 1.   ]
 [1.    1.    0.185 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  30
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.405 0.658 0.727 1.   ]
 [1.    0.663 0.428 0.853 1.   ]
 [1.    1.    0.185 1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.364 0.692 0.754 1.   ]
 [1.    0.696 0.385 0.867 1.   ]
 [1.    1.    0.167 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  31
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.364 0.692 0.754 1.   ]
 [1.    0.696 0.385 0.867 1.   ]
 [1.    1.    0.167 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.328 0.723 0.779 1.   ]
 [1.    0.727 0.347 0.881 1.   ]
 [1.    1.    0.15  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  32
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.328 0.723 0.779 1.   ]
 [1.    0.727 0.347 0.881 1.   ]
 [1.    1.    0.15  1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.295 0.751 0.701 1.   ]
 [1.    0.754 0.312 0.893 1.   ]
 [1.    1.    0.135 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  33
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.295 0.751 0.701 1.   ]
 [1.    0.754 0.312 0.893 1.   ]
 [1.    1.    0.135 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.265 0.776 0.631 1.   ]
 [1.    0.779 0.281 0.903 1.   ]
 [1.    1.    0.122 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  34
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.265 0.776 0.631 1.   ]
 [1.    0.779 0.281 0.903 1.   ]
 [1.    1.    0.122 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.239 0.798 0.568 1.   ]
 [1.    0.801 0.253 0.913 1.   ]
 [1.    1.    0.109 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  35
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.239 0.798 0.568 1.   ]
 [1.    0.801 0.253 0.913 1.   ]
 [1.    1.    0.109 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.821 0.227 0.922 1.   ]
 [1.    1.    0.098 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  36
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.821 0.227 0.922 1.   ]
 [1.    1.    0.098 1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.739 0.305 0.83  1.   ]
 [1.    1.    0.089 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  37
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.739 0.305 0.83  1.   ]
 [1.    1.    0.089 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.665 0.374 0.747 1.   ]
 [1.    1.    0.08  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  38
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.215 0.818 0.511 1.   ]
 [1.    0.665 0.374 0.747 1.   ]
 [1.    1.    0.08  1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.194 0.837 0.56  1.   ]
 [1.    0.698 0.337 0.772 1.   ]
 [1.    1.    0.072 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  39
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.194 0.837 0.56  1.   ]
 [1.    0.698 0.337 0.772 1.   ]
 [1.    1.    0.072 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.174 0.853 0.604 1.   ]
 [1.    0.729 0.303 0.795 1.   ]
 [1.    1.    0.065 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  40
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.414 0.943 0.649 1.   ]
 [1.    0.174 0.853 0.604 1.   ]
 [1.    0.729 0.303 0.795 1.   ]
 [1.    1.    0.065 1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.257 0.768 0.644 1.   ]
 [1.    0.756 0.273 0.815 1.   ]
 [1.    1.    0.065 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  41
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.257 0.768 0.644 1.   ]
 [1.    0.756 0.273 0.815 1.   ]
 [1.    1.    0.065 1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.231 0.791 0.679 1.   ]
 [1.    0.78  0.246 0.834 1.   ]
 [1.    1.    0.158 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  42
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.231 0.791 0.679 1.   ]
 [1.    0.78  0.246 0.834 1.   ]
 [1.    1.    0.158 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.802 0.221 0.85  1.   ]
 [1.    1.    0.142 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  43
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.802 0.221 0.85  1.   ]
 [1.    1.    0.142 1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.722 0.299 0.865 1.   ]
 [1.    1.    0.128 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  44
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.722 0.299 0.865 1.   ]
 [1.    1.    0.128 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.65  0.369 0.879 1.   ]
 [1.    1.    0.115 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  45
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.65  0.369 0.879 1.   ]
 [1.    1.    0.115 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.585 0.432 0.891 1.   ]
 [1.    1.    0.104 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  46
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.585 0.432 0.891 1.   ]
 [1.    1.    0.104 1.    1.   ]]
Crossing borders, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.526 0.489 0.802 1.   ]
 [1.    1.    0.093 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  47
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.308 0.812 0.711 1.   ]
 [1.    0.526 0.489 0.802 1.   ]
 [1.    1.    0.093 1.    1.   ]]
Next state :  (3, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.277 0.831 0.64  1.   ]
 [1.    0.574 0.44  0.822 1.   ]
 [1.    1.    0.084 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  48
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.277 0.831 0.64  1.   ]
 [1.    0.574 0.44  0.822 1.   ]
 [1.    1.    0.084 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.249 0.848 0.576 1.   ]
 [1.    0.616 0.396 0.839 1.   ]
 [1.    1.    0.076 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  49
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.249 0.848 0.576 1.   ]
 [1.    0.616 0.396 0.839 1.   ]
 [1.    1.    0.076 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.225 0.863 0.519 1.   ]
 [1.    0.655 0.356 0.856 1.   ]
 [1.    1.    0.068 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  50
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.225 0.863 0.519 1.   ]
 [1.    0.655 0.356 0.856 1.   ]
 [1.    1.    0.068 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.202 0.877 0.467 1.   ]
 [1.    0.689 0.321 0.87  1.   ]
 [1.    1.    0.061 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  51
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.202 0.877 0.467 1.   ]
 [1.    0.689 0.321 0.87  1.   ]
 [1.    1.    0.061 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.182 0.889 0.42  1.   ]
 [1.    0.72  0.289 0.883 1.   ]
 [1.    1.    0.055 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  52
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.182 0.889 0.42  1.   ]
 [1.    0.72  0.289 0.883 1.   ]
 [1.    1.    0.055 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.164 0.9   0.378 1.   ]
 [1.    0.748 0.26  0.895 1.   ]
 [1.    1.    0.05  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  53
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.164 0.9   0.378 1.   ]
 [1.    0.748 0.26  0.895 1.   ]
 [1.    1.    0.05  1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.147 0.91  0.34  1.   ]
 [1.    0.773 0.234 0.905 1.   ]
 [1.    1.    0.045 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  54
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.147 0.91  0.34  1.   ]
 [1.    0.773 0.234 0.905 1.   ]
 [1.    1.    0.045 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.796 0.21  0.915 1.   ]
 [1.    1.    0.04  1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  55
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.796 0.21  0.915 1.   ]
 [1.    1.    0.04  1.    1.   ]]
Next state :  (4, 2)
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.716 0.289 0.923 1.   ]
 [1.    1.    0.036 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  56
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.716 0.289 0.923 1.   ]
 [1.    1.    0.036 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.645 0.36  0.931 1.   ]
 [1.    1.    0.033 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  57
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.645 0.36  0.931 1.   ]
 [1.    1.    0.033 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.58  0.424 0.838 1.   ]
 [1.    1.    0.029 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  58
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.58  0.424 0.838 1.   ]
 [1.    1.    0.029 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.522 0.482 0.854 1.   ]
 [1.    1.    0.026 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  59
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.522 0.482 0.854 1.   ]
 [1.    1.    0.026 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.47  0.534 0.769 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  60
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.372 0.949 0.584 1.   ]
 [1.    0.133 0.919 0.406 1.   ]
 [1.    0.47  0.534 0.769 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.954 0.526 1.   ]
 [1.    0.219 0.827 0.466 1.   ]
 [1.    0.523 0.48  0.792 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  61
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.954 0.526 1.   ]
 [1.    0.219 0.827 0.466 1.   ]
 [1.    0.523 0.48  0.792 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Next state :  (2, 3)
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.859 0.573 1.   ]
 [1.    0.219 0.844 0.419 1.   ]
 [1.    0.523 0.532 0.813 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  62
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.859 0.573 1.   ]
 [1.    0.219 0.844 0.419 1.   ]
 [1.    0.523 0.532 0.813 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.773 0.616 0.9  ]
 [1.    0.219 0.86  0.377 1.   ]
 [1.    0.523 0.579 0.731 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  63
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.773 0.616 0.9  ]
 [1.    0.219 0.86  0.377 1.   ]
 [1.    0.523 0.579 0.731 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.695 0.654 0.81 ]
 [1.    0.219 0.874 0.339 1.   ]
 [1.    0.523 0.621 0.658 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  64
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.695 0.654 0.81 ]
 [1.    0.219 0.874 0.339 1.   ]
 [1.    0.523 0.621 0.658 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.626 0.689 0.829]
 [1.    0.219 0.887 0.305 1.   ]
 [1.    0.523 0.659 0.592 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  65
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.626 0.689 0.829]
 [1.    0.219 0.887 0.305 1.   ]
 [1.    0.523 0.659 0.592 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.563 0.72  0.846]
 [1.    0.219 0.898 0.275 1.   ]
 [1.    0.523 0.693 0.533 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  66
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.563 0.72  0.846]
 [1.    0.219 0.898 0.275 1.   ]
 [1.    0.523 0.693 0.533 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.507 0.748 0.761]
 [1.    0.219 0.908 0.247 1.   ]
 [1.    0.523 0.724 0.48  1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  67
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.507 0.748 0.761]
 [1.    0.219 0.908 0.247 1.   ]
 [1.    0.523 0.724 0.48  1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.456 0.773 0.685]
 [1.    0.219 0.917 0.223 1.   ]
 [1.    0.523 0.751 0.432 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  68
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.456 0.773 0.685]
 [1.    0.219 0.917 0.223 1.   ]
 [1.    0.523 0.751 0.432 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.411 0.796 0.617]
 [1.    0.219 0.926 0.2   1.   ]
 [1.    0.523 0.776 0.389 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  69
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.411 0.796 0.617]
 [1.    0.219 0.926 0.2   1.   ]
 [1.    0.523 0.776 0.389 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.37  0.816 0.555]
 [1.    0.219 0.933 0.18  1.   ]
 [1.    0.523 0.799 0.35  1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  70
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.37  0.816 0.555]
 [1.    0.219 0.933 0.18  1.   ]
 [1.    0.523 0.799 0.35  1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.333 0.835 0.6  ]
 [1.    0.219 0.94  0.162 1.   ]
 [1.    0.523 0.819 0.315 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  71
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.333 0.835 0.6  ]
 [1.    0.219 0.94  0.162 1.   ]
 [1.    0.523 0.819 0.315 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.299 0.851 0.54 ]
 [1.    0.219 0.946 0.146 1.   ]
 [1.    0.523 0.837 0.283 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  72
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.299 0.851 0.54 ]
 [1.    0.219 0.946 0.146 1.   ]
 [1.    0.523 0.837 0.283 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.269 0.866 0.586]
 [1.    0.219 0.951 0.131 1.   ]
 [1.    0.523 0.853 0.255 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  73
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.269 0.866 0.586]
 [1.    0.219 0.951 0.131 1.   ]
 [1.    0.523 0.853 0.255 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.242 0.88  0.627]
 [1.    0.219 0.956 0.118 1.   ]
 [1.    0.523 0.868 0.229 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  74
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.242 0.88  0.627]
 [1.    0.219 0.956 0.118 1.   ]
 [1.    0.523 0.868 0.229 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.218 0.892 0.664]
 [1.    0.219 0.96  0.107 1.   ]
 [1.    0.523 0.881 0.207 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  75
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.218 0.892 0.664]
 [1.    0.219 0.96  0.107 1.   ]
 [1.    0.523 0.881 0.207 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.196 0.902 0.698]
 [1.    0.219 0.964 0.096 1.   ]
 [1.    0.523 0.893 0.186 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  76
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.196 0.902 0.698]
 [1.    0.219 0.964 0.096 1.   ]
 [1.    0.523 0.893 0.186 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.177 0.912 0.628]
 [1.    0.219 0.968 0.086 1.   ]
 [1.    0.523 0.904 0.167 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  77
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.177 0.912 0.628]
 [1.    0.219 0.968 0.086 1.   ]
 [1.    0.523 0.904 0.167 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.971 0.078 1.   ]
 [1.    0.523 0.913 0.151 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  78
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.971 0.078 1.   ]
 [1.    0.523 0.913 0.151 1.   ]
 [1.    1.    0.024 1.    1.   ]]
Next state :  (3, 3)
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.874 0.17  0.9  ]
 [1.    0.523 0.922 0.136 1.   ]
 [1.    1.    0.121 0.9   1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  79
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.874 0.17  0.9  ]
 [1.    0.523 0.922 0.136 1.   ]
 [1.    1.    0.121 0.9   1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.787 0.253 0.81 ]
 [1.    0.523 0.93  0.122 1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  80
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.335 0.159 0.921 0.665]
 [1.    0.219 0.787 0.253 0.81 ]
 [1.    0.523 0.93  0.122 1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[1.    1.    1.    1.    1.   ]
 [1.    0.302 0.243 0.829 0.665]
 [1.    0.297 0.708 0.328 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  81
Predicted states :  torch.Size([9])
tensor([[0., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    0.302 0.243 0.829 0.665]
 [1.    0.297 0.708 0.328 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (1, 2)
[[1.    0.9   0.9   0.9   1.   ]
 [1.    0.372 0.219 0.846 0.665]
 [1.    0.368 0.637 0.395 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  82
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 2)
Action :  3
Canvas : 
[[1.    0.9   0.9   0.9   1.   ]
 [1.    0.372 0.219 0.846 0.665]
 [1.    0.368 0.637 0.395 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[1.    0.91  0.91  0.91  1.   ]
 [1.    0.334 0.197 0.761 0.665]
 [1.    0.431 0.673 0.455 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  83
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 2)
Action :  2
Canvas : 
[[1.    0.91  0.91  0.91  1.   ]
 [1.    0.334 0.197 0.761 0.665]
 [1.    0.431 0.673 0.455 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (1, 1)
[[1.    0.819 0.919 0.91  1.   ]
 [1.    0.301 0.277 0.761 0.665]
 [1.    0.388 0.706 0.455 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  84
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  3
Canvas : 
[[1.    0.819 0.919 0.91  1.   ]
 [1.    0.301 0.277 0.761 0.665]
 [1.    0.388 0.706 0.455 0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (1, 2)
[[1.    0.837 0.927 0.919 1.   ]
 [1.    0.371 0.25  0.785 0.665]
 [1.    0.449 0.636 0.51  0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  85
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 2)
Action :  2
Canvas : 
[[1.    0.837 0.927 0.919 1.   ]
 [1.    0.371 0.25  0.785 0.665]
 [1.    0.449 0.636 0.51  0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (1, 1)
[[0.9   0.853 0.834 0.919 1.   ]
 [1.    0.334 0.325 0.785 0.665]
 [1.    0.404 0.672 0.51  0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  86
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  1
Canvas : 
[[0.9   0.853 0.834 0.919 1.   ]
 [1.    0.334 0.325 0.785 0.665]
 [1.    0.404 0.672 0.51  0.81 ]
 [1.    0.571 0.837 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (2, 1)
[[0.9   0.853 0.834 0.919 1.   ]
 [0.9   0.4   0.392 0.785 0.665]
 [1.    0.364 0.705 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  87
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  0
Canvas : 
[[0.9   0.853 0.834 0.919 1.   ]
 [0.9   0.4   0.392 0.785 0.665]
 [1.    0.364 0.705 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (1, 1)
[[0.81  0.868 0.851 0.919 1.   ]
 [0.91  0.36  0.453 0.785 0.665]
 [1.    0.327 0.734 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  88
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  0
Canvas : 
[[0.81  0.868 0.851 0.919 1.   ]
 [0.91  0.36  0.453 0.785 0.665]
 [1.    0.327 0.734 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.729 0.881 0.866 0.919 1.   ]
 [0.919 0.324 0.508 0.785 0.665]
 [1.    0.295 0.761 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  89
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  3
Canvas : 
[[0.729 0.881 0.866 0.919 1.   ]
 [0.919 0.324 0.508 0.785 0.665]
 [1.    0.295 0.761 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.656 0.893 0.879 0.919 1.   ]
 [0.927 0.292 0.557 0.785 0.665]
 [1.    0.265 0.785 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  90
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  2
Canvas : 
[[0.656 0.893 0.879 0.919 1.   ]
 [0.927 0.292 0.557 0.785 0.665]
 [1.    0.265 0.785 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.59  0.904 0.791 0.919 1.   ]
 [0.934 0.263 0.601 0.785 0.665]
 [1.    0.239 0.806 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  91
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  3
Canvas : 
[[0.59  0.904 0.791 0.919 1.   ]
 [0.934 0.263 0.601 0.785 0.665]
 [1.    0.239 0.806 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.531 0.913 0.712 0.919 1.   ]
 [0.941 0.236 0.641 0.785 0.665]
 [1.    0.215 0.826 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  92
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  0
Canvas : 
[[0.531 0.913 0.712 0.919 1.   ]
 [0.941 0.236 0.641 0.785 0.665]
 [1.    0.215 0.826 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.478 0.922 0.641 0.919 1.   ]
 [0.947 0.213 0.677 0.785 0.665]
 [1.    0.193 0.843 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  93
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  2
Canvas : 
[[0.478 0.922 0.641 0.919 1.   ]
 [0.947 0.213 0.677 0.785 0.665]
 [1.    0.193 0.843 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.43  0.93  0.677 0.919 1.   ]
 [0.952 0.191 0.709 0.785 0.665]
 [1.    0.174 0.859 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  94
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  3
Canvas : 
[[0.43  0.93  0.677 0.919 1.   ]
 [0.952 0.191 0.709 0.785 0.665]
 [1.    0.174 0.859 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.387 0.937 0.709 0.919 1.   ]
 [0.957 0.172 0.738 0.785 0.665]
 [1.    0.157 0.873 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  95
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  0
Canvas : 
[[0.387 0.937 0.709 0.919 1.   ]
 [0.957 0.172 0.738 0.785 0.665]
 [1.    0.157 0.873 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.961 0.155 0.765 0.785 0.665]
 [1.    0.141 0.886 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  96
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.961 0.155 0.765 0.785 0.665]
 [1.    0.141 0.886 0.51  0.81 ]
 [1.    0.514 0.853 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (2, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [1.    0.127 0.897 0.51  0.81 ]
 [1.    0.462 0.868 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  97
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [1.    0.127 0.897 0.51  0.81 ]
 [1.    0.462 0.868 0.21  1.   ]
 [1.    1.    0.209 0.81  1.   ]]
Next state :  (3, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.9   0.214 0.907 0.51  0.81 ]
 [1.    0.416 0.881 0.21  1.   ]
 [1.    0.9   0.288 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  98
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.9   0.214 0.907 0.51  0.81 ]
 [1.    0.416 0.881 0.21  1.   ]
 [1.    0.9   0.288 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.81  0.293 0.817 0.51  0.81 ]
 [1.    0.374 0.893 0.21  1.   ]
 [1.    0.81  0.359 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  99
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.81  0.293 0.817 0.51  0.81 ]
 [1.    0.374 0.893 0.21  1.   ]
 [1.    0.81  0.359 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.729 0.363 0.735 0.51  0.81 ]
 [1.    0.337 0.904 0.21  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  100
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.24  0.788 0.785 0.665]
 [0.729 0.363 0.735 0.51  0.81 ]
 [1.    0.337 0.904 0.21  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.216 0.809 0.707 0.665]
 [0.729 0.427 0.661 0.559 0.81 ]
 [1.    0.403 0.813 0.289 1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  101
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.216 0.809 0.707 0.665]
 [0.729 0.427 0.661 0.559 0.81 ]
 [1.    0.403 0.813 0.289 1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.294 0.828 0.736 0.665]
 [0.729 0.484 0.595 0.603 0.81 ]
 [1.    0.463 0.832 0.36  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  102
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.865 0.294 0.828 0.736 0.665]
 [0.729 0.484 0.595 0.603 0.81 ]
 [1.    0.463 0.832 0.36  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Next state :  (2, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.756 0.436 0.636 0.603 0.81 ]
 [1.    0.417 0.849 0.36  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  103
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 1., 0.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.756 0.436 0.636 0.603 0.81 ]
 [1.    0.417 0.849 0.36  1.   ]
 [1.    0.729 0.424 0.81  1.   ]]
Next state :  (3, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.78  0.492 0.672 0.603 0.81 ]
 [1.    0.375 0.864 0.36  1.   ]
 [1.    0.756 0.381 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  104
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [0., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.78  0.492 0.672 0.603 0.81 ]
 [1.    0.375 0.864 0.36  1.   ]
 [1.    0.756 0.381 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.802 0.443 0.705 0.603 0.81 ]
 [1.    0.338 0.877 0.36  1.   ]
 [0.9   0.78  0.443 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  105
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.802 0.443 0.705 0.603 0.81 ]
 [1.    0.338 0.877 0.36  1.   ]
 [0.9   0.78  0.443 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.822 0.399 0.734 0.603 0.81 ]
 [1.    0.304 0.89  0.36  1.   ]
 [0.91  0.702 0.499 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  106
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.822 0.399 0.734 0.603 0.81 ]
 [1.    0.304 0.89  0.36  1.   ]
 [0.91  0.702 0.499 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.84  0.459 0.761 0.603 0.81 ]
 [0.9   0.273 0.901 0.36  1.   ]
 [0.919 0.732 0.549 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  107
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.84  0.459 0.761 0.603 0.81 ]
 [0.9   0.273 0.901 0.36  1.   ]
 [0.919 0.732 0.549 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.856 0.413 0.785 0.603 0.81 ]
 [0.91  0.246 0.911 0.36  1.   ]
 [0.927 0.659 0.594 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  108
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.856 0.413 0.785 0.603 0.81 ]
 [0.91  0.246 0.911 0.36  1.   ]
 [0.927 0.659 0.594 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.87  0.472 0.806 0.603 0.81 ]
 [0.819 0.221 0.92  0.36  1.   ]
 [0.934 0.693 0.635 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  109
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.87  0.472 0.806 0.603 0.81 ]
 [0.819 0.221 0.92  0.36  1.   ]
 [0.934 0.693 0.635 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.883 0.425 0.826 0.603 0.81 ]
 [0.837 0.199 0.928 0.36  1.   ]
 [0.941 0.624 0.671 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  110
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.883 0.425 0.826 0.603 0.81 ]
 [0.837 0.199 0.928 0.36  1.   ]
 [0.941 0.624 0.671 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.795 0.482 0.743 0.603 0.81 ]
 [0.853 0.179 0.935 0.36  1.   ]
 [0.947 0.561 0.704 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  111
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.795 0.482 0.743 0.603 0.81 ]
 [0.853 0.179 0.935 0.36  1.   ]
 [0.947 0.561 0.704 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.716 0.534 0.769 0.603 0.81 ]
 [0.868 0.161 0.941 0.36  1.   ]
 [0.952 0.505 0.734 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  112
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.716 0.534 0.769 0.603 0.81 ]
 [0.868 0.161 0.941 0.36  1.   ]
 [0.952 0.505 0.734 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.644 0.581 0.792 0.603 0.81 ]
 [0.881 0.145 0.947 0.36  1.   ]
 [0.957 0.455 0.76  0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  113
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.644 0.581 0.792 0.603 0.81 ]
 [0.881 0.145 0.947 0.36  1.   ]
 [0.957 0.455 0.76  0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.893 0.131 0.953 0.36  1.   ]
 [0.961 0.409 0.784 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  114
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.893 0.131 0.953 0.36  1.   ]
 [0.961 0.409 0.784 0.81  1.   ]]
Next state :  (4, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.804 0.218 0.957 0.36  1.   ]
 [0.965 0.368 0.806 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  115
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.804 0.218 0.957 0.36  1.   ]
 [0.965 0.368 0.806 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.723 0.296 0.962 0.36  1.   ]
 [0.969 0.331 0.825 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  116
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.723 0.296 0.962 0.36  1.   ]
 [0.969 0.331 0.825 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.651 0.366 0.965 0.36  1.   ]
 [0.972 0.298 0.843 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  117
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.651 0.366 0.965 0.36  1.   ]
 [0.972 0.298 0.843 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.586 0.43  0.969 0.36  1.   ]
 [0.975 0.269 0.858 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  118
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.586 0.43  0.969 0.36  1.   ]
 [0.975 0.269 0.858 0.81  1.   ]]
Crossing borders, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.527 0.487 0.972 0.36  1.   ]
 [0.977 0.242 0.873 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  119
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.527 0.487 0.972 0.36  1.   ]
 [0.977 0.242 0.873 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.475 0.538 0.975 0.36  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  120
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.265 0.845 0.736 0.665]
 [0.58  0.622 0.713 0.603 0.81 ]
 [0.475 0.538 0.975 0.36  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.238 0.861 0.662 0.665]
 [0.58  0.66  0.642 0.643 0.81 ]
 [0.475 0.584 0.877 0.424 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  121
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.238 0.861 0.662 0.665]
 [0.58  0.66  0.642 0.643 0.81 ]
 [0.475 0.584 0.877 0.424 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.314 0.875 0.696 0.665]
 [0.58  0.694 0.577 0.678 0.81 ]
 [0.475 0.626 0.89  0.482 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  122
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.314 0.875 0.696 0.665]
 [0.58  0.694 0.577 0.678 0.81 ]
 [0.475 0.626 0.89  0.482 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.383 0.787 0.727 0.665]
 [0.58  0.725 0.52  0.711 0.81 ]
 [0.475 0.663 0.801 0.533 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  123
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.383 0.787 0.727 0.665]
 [0.58  0.725 0.52  0.711 0.81 ]
 [0.475 0.663 0.801 0.533 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.445 0.809 0.754 0.665]
 [0.58  0.652 0.468 0.739 0.81 ]
 [0.475 0.697 0.821 0.58  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  124
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.445 0.809 0.754 0.665]
 [0.58  0.652 0.468 0.739 0.81 ]
 [0.475 0.697 0.821 0.58  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.5   0.828 0.779 0.665]
 [0.58  0.687 0.421 0.766 0.81 ]
 [0.475 0.727 0.738 0.622 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  125
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.5   0.828 0.779 0.665]
 [0.58  0.687 0.421 0.766 0.81 ]
 [0.475 0.727 0.738 0.622 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.45  0.845 0.801 0.665]
 [0.58  0.718 0.379 0.789 0.81 ]
 [0.475 0.755 0.665 0.66  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  126
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.45  0.845 0.801 0.665]
 [0.58  0.718 0.379 0.789 0.81 ]
 [0.475 0.755 0.665 0.66  1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.405 0.86  0.721 0.665]
 [0.58  0.747 0.341 0.81  0.81 ]
 [0.475 0.779 0.598 0.694 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  127
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.405 0.86  0.721 0.665]
 [0.58  0.747 0.341 0.81  0.81 ]
 [0.475 0.779 0.598 0.694 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.365 0.874 0.649 0.665]
 [0.58  0.772 0.307 0.829 0.81 ]
 [0.475 0.801 0.538 0.724 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  128
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.365 0.874 0.649 0.665]
 [0.58  0.772 0.307 0.829 0.81 ]
 [0.475 0.801 0.538 0.724 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.328 0.887 0.584 0.665]
 [0.58  0.795 0.276 0.846 0.81 ]
 [0.475 0.821 0.485 0.752 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  129
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.328 0.887 0.584 0.665]
 [0.58  0.795 0.276 0.846 0.81 ]
 [0.475 0.821 0.485 0.752 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.815 0.249 0.862 0.81 ]
 [0.475 0.839 0.436 0.777 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  130
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.815 0.249 0.862 0.81 ]
 [0.475 0.839 0.436 0.777 1.   ]
 [0.979 0.217 0.885 0.81  1.   ]]
Next state :  (3, 2)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.734 0.324 0.775 0.81 ]
 [0.475 0.855 0.392 0.799 1.   ]
 [0.979 0.296 0.797 0.829 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  131
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.734 0.324 0.775 0.81 ]
 [0.475 0.855 0.392 0.799 1.   ]
 [0.979 0.296 0.797 0.829 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.66  0.391 0.798 0.81 ]
 [0.475 0.87  0.353 0.819 1.   ]
 [0.979 0.366 0.717 0.846 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  132
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.66  0.391 0.798 0.81 ]
 [0.475 0.87  0.353 0.819 1.   ]
 [0.979 0.366 0.717 0.846 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.594 0.452 0.818 0.81 ]
 [0.475 0.883 0.318 0.837 1.   ]
 [0.979 0.43  0.645 0.861 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  133
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.594 0.452 0.818 0.81 ]
 [0.475 0.883 0.318 0.837 1.   ]
 [0.979 0.43  0.645 0.861 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.535 0.507 0.836 0.81 ]
 [0.475 0.894 0.286 0.854 1.   ]
 [0.979 0.487 0.581 0.875 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  134
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.535 0.507 0.836 0.81 ]
 [0.475 0.894 0.286 0.854 1.   ]
 [0.979 0.487 0.581 0.875 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.481 0.556 0.753 0.81 ]
 [0.475 0.905 0.257 0.868 1.   ]
 [0.979 0.538 0.523 0.888 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  135
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.481 0.556 0.753 0.81 ]
 [0.475 0.905 0.257 0.868 1.   ]
 [0.979 0.538 0.523 0.888 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.433 0.601 0.677 0.81 ]
 [0.475 0.914 0.232 0.881 1.   ]
 [0.979 0.584 0.471 0.899 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  136
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.433 0.601 0.677 0.81 ]
 [0.475 0.914 0.232 0.881 1.   ]
 [0.979 0.584 0.471 0.899 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.39  0.641 0.61  0.81 ]
 [0.475 0.923 0.209 0.893 1.   ]
 [0.979 0.626 0.423 0.909 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  137
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.39  0.641 0.61  0.81 ]
 [0.475 0.923 0.209 0.893 1.   ]
 [0.979 0.626 0.423 0.909 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.351 0.677 0.549 0.81 ]
 [0.475 0.931 0.188 0.904 1.   ]
 [0.979 0.663 0.381 0.918 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  138
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.351 0.677 0.549 0.81 ]
 [0.475 0.931 0.188 0.904 1.   ]
 [0.979 0.663 0.381 0.918 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.316 0.709 0.494 0.81 ]
 [0.475 0.938 0.169 0.914 1.   ]
 [0.979 0.697 0.343 0.926 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  139
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.316 0.709 0.494 0.81 ]
 [0.475 0.938 0.169 0.914 1.   ]
 [0.979 0.697 0.343 0.926 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.284 0.738 0.444 0.81 ]
 [0.475 0.944 0.152 0.922 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  140
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.295 0.898 0.625 0.665]
 [0.58  0.284 0.738 0.444 0.81 ]
 [0.475 0.944 0.152 0.922 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.908 0.563 0.665]
 [0.58  0.356 0.664 0.5   0.81 ]
 [0.475 0.949 0.137 0.93  1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  141
Predicted states :  torch.Size([9])
tensor([[0., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.908 0.563 0.665]
 [0.58  0.356 0.664 0.5   0.81 ]
 [0.475 0.949 0.137 0.93  1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Next state :  (2, 3)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.818 0.507 0.599]
 [0.58  0.356 0.698 0.45  0.829]
 [0.475 0.949 0.223 0.837 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  142
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.818 0.507 0.599]
 [0.58  0.356 0.698 0.45  0.829]
 [0.475 0.949 0.223 0.837 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.736 0.556 0.539]
 [0.58  0.356 0.728 0.405 0.846]
 [0.475 0.949 0.301 0.753 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  143
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.736 0.556 0.539]
 [0.58  0.356 0.728 0.405 0.846]
 [0.475 0.949 0.301 0.753 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.662 0.6   0.585]
 [0.58  0.356 0.755 0.364 0.861]
 [0.475 0.949 0.371 0.678 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  144
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.662 0.6   0.585]
 [0.58  0.356 0.755 0.364 0.861]
 [0.475 0.949 0.371 0.678 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.596 0.64  0.627]
 [0.58  0.356 0.78  0.328 0.875]
 [0.475 0.949 0.434 0.61  1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  145
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.596 0.64  0.627]
 [0.58  0.356 0.78  0.328 0.875]
 [0.475 0.949 0.434 0.61  1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.536 0.676 0.664]
 [0.58  0.356 0.802 0.295 0.888]
 [0.475 0.949 0.49  0.549 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  146
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.536 0.676 0.664]
 [0.58  0.356 0.802 0.295 0.888]
 [0.475 0.949 0.49  0.549 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.483 0.709 0.597]
 [0.58  0.356 0.822 0.266 0.899]
 [0.475 0.949 0.541 0.494 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  147
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.483 0.709 0.597]
 [0.58  0.356 0.822 0.266 0.899]
 [0.475 0.949 0.541 0.494 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.435 0.738 0.538]
 [0.58  0.356 0.839 0.239 0.909]
 [0.475 0.949 0.587 0.445 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  148
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.435 0.738 0.538]
 [0.58  0.356 0.839 0.239 0.909]
 [0.475 0.949 0.587 0.445 1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.391 0.764 0.584]
 [0.58  0.356 0.855 0.215 0.918]
 [0.475 0.949 0.628 0.4   1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  149
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.391 0.764 0.584]
 [0.58  0.356 0.855 0.215 0.918]
 [0.475 0.949 0.628 0.4   1.   ]
 [0.979 0.727 0.309 0.934 1.   ]]
Next state :  (3, 3)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.391 0.764 0.584]
 [0.58  0.356 0.77  0.294 0.926]
 [0.475 0.949 0.666 0.36  1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  150
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.391 0.764 0.584]
 [0.58  0.356 0.77  0.294 0.926]
 [0.475 0.949 0.666 0.36  1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Next state :  (2, 3)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.352 0.788 0.626]
 [0.58  0.356 0.793 0.264 0.934]
 [0.475 0.949 0.699 0.324 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  151
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.352 0.788 0.626]
 [0.58  0.356 0.793 0.264 0.934]
 [0.475 0.949 0.699 0.324 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.317 0.809 0.663]
 [0.58  0.356 0.814 0.238 0.94 ]
 [0.475 0.949 0.729 0.292 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  152
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.317 0.809 0.663]
 [0.58  0.356 0.814 0.238 0.94 ]
 [0.475 0.949 0.729 0.292 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.285 0.828 0.597]
 [0.58  0.356 0.832 0.214 0.946]
 [0.475 0.949 0.756 0.263 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  153
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.285 0.828 0.597]
 [0.58  0.356 0.832 0.214 0.946]
 [0.475 0.949 0.756 0.263 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.257 0.845 0.537]
 [0.58  0.356 0.849 0.193 0.952]
 [0.475 0.949 0.781 0.236 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  154
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.257 0.845 0.537]
 [0.58  0.356 0.849 0.193 0.952]
 [0.475 0.949 0.781 0.236 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.231 0.861 0.483]
 [0.58  0.356 0.864 0.173 0.957]
 [0.475 0.949 0.803 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  155
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.231 0.861 0.483]
 [0.58  0.356 0.864 0.173 0.957]
 [0.475 0.949 0.803 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.208 0.875 0.535]
 [0.58  0.356 0.878 0.156 0.961]
 [0.475 0.949 0.822 0.191 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  156
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.208 0.875 0.535]
 [0.58  0.356 0.878 0.156 0.961]
 [0.475 0.949 0.822 0.191 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.187 0.887 0.582]
 [0.58  0.356 0.89  0.14  0.965]
 [0.475 0.949 0.84  0.172 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  157
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.187 0.887 0.582]
 [0.58  0.356 0.89  0.14  0.965]
 [0.475 0.949 0.84  0.172 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.168 0.898 0.523]
 [0.58  0.356 0.901 0.126 0.968]
 [0.475 0.949 0.856 0.155 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  158
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.168 0.898 0.523]
 [0.58  0.356 0.901 0.126 0.968]
 [0.475 0.949 0.856 0.155 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.152 0.909 0.471]
 [0.58  0.356 0.911 0.114 0.971]
 [0.475 0.949 0.87  0.14  1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  159
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.152 0.909 0.471]
 [0.58  0.356 0.911 0.114 0.971]
 [0.475 0.949 0.87  0.14  1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.136 0.918 0.524]
 [0.58  0.356 0.92  0.102 0.974]
 [0.475 0.949 0.883 0.126 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  160
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.266 0.136 0.918 0.524]
 [0.58  0.356 0.92  0.102 0.974]
 [0.475 0.949 0.883 0.126 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Next state :  (3, 3)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.239 0.223 0.826 0.524]
 [0.58  0.42  0.828 0.192 0.974]
 [0.475 0.955 0.795 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  161
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.879 0.239 0.223 0.826 0.524]
 [0.58  0.42  0.828 0.192 0.974]
 [0.475 0.955 0.795 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Next state :  (2, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.791 0.315 0.2   0.826 0.524]
 [0.622 0.378 0.845 0.192 0.974]
 [0.527 0.859 0.816 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  162
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.791 0.315 0.2   0.826 0.524]
 [0.622 0.378 0.845 0.192 0.974]
 [0.527 0.859 0.816 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.712 0.384 0.28  0.826 0.524]
 [0.659 0.34  0.861 0.192 0.974]
 [0.574 0.773 0.834 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  163
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.712 0.384 0.28  0.826 0.524]
 [0.659 0.34  0.861 0.192 0.974]
 [0.574 0.773 0.834 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.641 0.445 0.252 0.826 0.524]
 [0.694 0.306 0.874 0.192 0.974]
 [0.617 0.696 0.851 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  164
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.641 0.445 0.252 0.826 0.524]
 [0.694 0.306 0.874 0.192 0.974]
 [0.617 0.696 0.851 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.576 0.501 0.227 0.826 0.524]
 [0.724 0.276 0.887 0.192 0.974]
 [0.655 0.626 0.866 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  165
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.576 0.501 0.227 0.826 0.524]
 [0.724 0.276 0.887 0.192 0.974]
 [0.655 0.626 0.866 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.519 0.551 0.304 0.826 0.524]
 [0.752 0.248 0.898 0.192 0.974]
 [0.69  0.564 0.879 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  166
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.519 0.551 0.304 0.826 0.524]
 [0.752 0.248 0.898 0.192 0.974]
 [0.69  0.564 0.879 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.467 0.596 0.274 0.826 0.524]
 [0.777 0.223 0.908 0.192 0.974]
 [0.721 0.507 0.891 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  167
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.467 0.596 0.274 0.826 0.524]
 [0.777 0.223 0.908 0.192 0.974]
 [0.721 0.507 0.891 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.42  0.636 0.247 0.826 0.524]
 [0.799 0.201 0.918 0.192 0.974]
 [0.749 0.457 0.902 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  168
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.42  0.636 0.247 0.826 0.524]
 [0.799 0.201 0.918 0.192 0.974]
 [0.749 0.457 0.902 0.213 1.   ]
 [0.979 0.727 0.378 0.84  1.   ]]
Next state :  (3, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.42  0.636 0.247 0.826 0.524]
 [0.719 0.281 0.926 0.192 0.974]
 [0.774 0.411 0.912 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  169
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.42  0.636 0.247 0.826 0.524]
 [0.719 0.281 0.926 0.192 0.974]
 [0.774 0.411 0.912 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Next state :  (2, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.378 0.673 0.322 0.826 0.524]
 [0.747 0.253 0.933 0.192 0.974]
 [0.796 0.37  0.921 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  170
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.378 0.673 0.322 0.826 0.524]
 [0.747 0.253 0.933 0.192 0.974]
 [0.796 0.37  0.921 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.34  0.705 0.39  0.826 0.524]
 [0.772 0.228 0.94  0.192 0.974]
 [0.817 0.333 0.929 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  171
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.34  0.705 0.39  0.826 0.524]
 [0.772 0.228 0.94  0.192 0.974]
 [0.817 0.333 0.929 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.306 0.735 0.351 0.826 0.524]
 [0.795 0.205 0.946 0.192 0.974]
 [0.835 0.3   0.936 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  172
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.306 0.735 0.351 0.826 0.524]
 [0.795 0.205 0.946 0.192 0.974]
 [0.835 0.3   0.936 0.213 1.   ]
 [0.981 0.654 0.44  0.84  1.   ]]
Next state :  (3, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.306 0.735 0.351 0.826 0.524]
 [0.716 0.284 0.851 0.192 0.974]
 [0.852 0.27  0.942 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  173
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.306 0.735 0.351 0.826 0.524]
 [0.716 0.284 0.851 0.192 0.974]
 [0.852 0.27  0.942 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Next state :  (2, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.276 0.761 0.416 0.826 0.524]
 [0.744 0.256 0.866 0.192 0.974]
 [0.866 0.243 0.948 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  174
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.276 0.761 0.416 0.826 0.524]
 [0.744 0.256 0.866 0.192 0.974]
 [0.866 0.243 0.948 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.248 0.785 0.374 0.826 0.524]
 [0.77  0.23  0.88  0.192 0.974]
 [0.88  0.218 0.953 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  175
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.248 0.785 0.374 0.826 0.524]
 [0.77  0.23  0.88  0.192 0.974]
 [0.88  0.218 0.953 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.793 0.207 0.892 0.192 0.974]
 [0.892 0.197 0.958 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  176
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.793 0.207 0.892 0.192 0.974]
 [0.892 0.197 0.958 0.213 1.   ]
 [0.983 0.589 0.496 0.84  1.   ]]
Next state :  (3, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.713 0.287 0.902 0.192 0.974]
 [0.903 0.177 0.962 0.213 1.   ]
 [0.985 0.53  0.546 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  177
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.713 0.287 0.902 0.192 0.974]
 [0.903 0.177 0.962 0.213 1.   ]
 [0.985 0.53  0.546 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.642 0.358 0.812 0.192 0.974]
 [0.912 0.159 0.966 0.213 1.   ]
 [0.986 0.477 0.592 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  178
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.642 0.358 0.812 0.192 0.974]
 [0.912 0.159 0.966 0.213 1.   ]
 [0.986 0.477 0.592 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.578 0.422 0.731 0.192 0.974]
 [0.921 0.143 0.969 0.213 1.   ]
 [0.988 0.429 0.633 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  179
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.578 0.422 0.731 0.192 0.974]
 [0.921 0.143 0.969 0.213 1.   ]
 [0.988 0.429 0.633 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.52  0.48  0.658 0.192 0.974]
 [0.929 0.129 0.972 0.213 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  180
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 1)
Action :  1
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.807 0.437 0.826 0.524]
 [0.52  0.48  0.658 0.192 0.974]
 [0.929 0.129 0.972 0.213 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Next state :  (4, 1)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.726 0.493 0.743 0.524]
 [0.52  0.532 0.592 0.273 0.974]
 [0.929 0.216 0.875 0.292 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  181
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 1., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.726 0.493 0.743 0.524]
 [0.52  0.532 0.592 0.273 0.974]
 [0.929 0.216 0.875 0.292 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.544 0.769 0.524]
 [0.52  0.579 0.533 0.346 0.974]
 [0.929 0.294 0.888 0.363 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  182
Predicted states :  torch.Size([9])
tensor([[0., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.544 0.769 0.524]
 [0.52  0.579 0.533 0.346 0.974]
 [0.929 0.294 0.888 0.363 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Next state :  (2, 3)
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.489 0.792 0.572]
 [0.52  0.579 0.58  0.311 0.977]
 [0.929 0.294 0.899 0.326 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  183
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.489 0.792 0.572]
 [0.52  0.579 0.58  0.311 0.977]
 [0.929 0.294 0.899 0.326 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.44  0.813 0.514]
 [0.52  0.579 0.622 0.28  0.979]
 [0.929 0.294 0.909 0.294 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  184
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.44  0.813 0.514]
 [0.52  0.579 0.622 0.28  0.979]
 [0.929 0.294 0.909 0.294 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.396 0.832 0.463]
 [0.52  0.579 0.659 0.252 0.981]
 [0.929 0.294 0.918 0.264 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  185
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.396 0.832 0.463]
 [0.52  0.579 0.659 0.252 0.981]
 [0.929 0.294 0.918 0.264 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.357 0.848 0.417]
 [0.52  0.579 0.694 0.227 0.983]
 [0.929 0.294 0.926 0.238 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  186
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.357 0.848 0.417]
 [0.52  0.579 0.694 0.227 0.983]
 [0.929 0.294 0.926 0.238 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.321 0.864 0.375]
 [0.52  0.579 0.724 0.204 0.985]
 [0.929 0.294 0.934 0.214 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  187
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.321 0.864 0.375]
 [0.52  0.579 0.724 0.204 0.985]
 [0.929 0.294 0.934 0.214 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
Hitting a wall, returning same state ...
[[0.349 0.943 0.638 0.919 1.   ]
 [0.223 0.653 0.289 0.877 0.337]
 [0.52  0.579 0.752 0.184 0.986]
 [0.929 0.294 0.94  0.193 1.   ]
 [0.989 0.386 0.669 0.84  1.   ]]
