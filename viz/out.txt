Running Viz Embeddings
################## PARAMS LOADED #################
Loaded Model
torch.Size([128, 32])
torch.Size([128])
torch.Size([256, 128])
torch.Size([256])
torch.Size([256, 256])
torch.Size([256])
torch.Size([32, 256])
torch.Size([32])
torch.Size([32, 45])
torch.Size([32, 32])
torch.Size([32])
torch.Size([32])
torch.Size([9, 32])
torch.Size([9])
center :  torch.Size([32])
weights :  torch.Size([100, 32])
hidden :  torch.Size([1, 100, 32])
Batched Inputs torch.Size([100, 13])
Initial canvas
[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
Timestep :  0
Predicted states :  torch.Size([9])
tensor([[1., 0., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]
 [1. 1. 1. 1. 1.]]
Hitting a wall, returning same state ...
Canvas : 
[[1.  1.  1.  1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  1.  1.  1. ]]
Batched Inputs torch.Size([100, 13])
Timestep :  1
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.  1.  1.  1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  0.9 1.  1. ]
 [1.  1.  1.  1.  1. ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.   1.   1.   1.   1.  ]
 [1.   1.   0.81 0.9  1.  ]
 [1.   1.   0.81 0.9  1.  ]
 [1.   1.   0.81 1.   1.  ]
 [1.   1.   1.   1.   1.  ]]
Batched Inputs torch.Size([100, 13])
Timestep :  2
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.   1.   1.   1.   1.  ]
 [1.   1.   0.81 0.9  1.  ]
 [1.   1.   0.81 0.9  1.  ]
 [1.   1.   0.81 1.   1.  ]
 [1.   1.   1.   1.   1.  ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    1.    0.829 0.91  1.   ]
 [1.    0.9   0.729 0.81  1.   ]
 [1.    1.    0.729 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  3
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.    1.    1.    1.    1.   ]
 [1.    1.    0.829 0.91  1.   ]
 [1.    0.9   0.729 0.81  1.   ]
 [1.    1.    0.729 1.    1.   ]
 [1.    1.    1.    1.    1.   ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.     1.     1.     1.     1.    ]
 [1.     1.     0.8461 0.919  1.    ]
 [1.     0.91   0.6561 0.829  1.    ]
 [1.     1.     0.6561 1.     1.    ]
 [1.     1.     1.     1.     1.    ]]
Batched Inputs torch.Size([100, 13])
Timestep :  4
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.     1.     1.     1.     1.    ]
 [1.     1.     0.8461 0.919  1.    ]
 [1.     0.91   0.6561 0.829  1.    ]
 [1.     1.     0.6561 1.     1.    ]
 [1.     1.     1.     1.     1.    ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.      1.      1.      1.      1.     ]
 [1.      1.      0.86149 0.8271  1.     ]
 [1.      0.819   0.59049 0.7461  1.     ]
 [1.      1.      0.59049 1.      1.     ]
 [1.      1.      1.      1.      1.     ]]
Batched Inputs torch.Size([100, 13])
Timestep :  5
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.      1.      1.      1.      1.     ]
 [1.      1.      0.86149 0.8271  1.     ]
 [1.      0.819   0.59049 0.7461  1.     ]
 [1.      1.      0.59049 1.      1.     ]
 [1.      1.      1.      1.      1.     ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.       1.       1.       1.       1.      ]
 [1.       1.       0.875341 0.74439  1.      ]
 [1.       0.7371   0.531441 0.67149  1.      ]
 [1.       1.       0.531441 1.       1.      ]
 [1.       1.       1.       1.       1.      ]]
Batched Inputs torch.Size([100, 13])
Timestep :  6
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.       1.       1.       1.       1.      ]
 [1.       1.       0.875341 0.74439  1.      ]
 [1.       0.7371   0.531441 0.67149  1.      ]
 [1.       1.       0.531441 1.       1.      ]
 [1.       1.       1.       1.       1.      ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.        1.        1.        1.        1.       ]
 [1.        1.        0.8878069 0.669951  1.       ]
 [1.        0.66339   0.4782969 0.604341  1.       ]
 [1.        1.        0.4782969 1.        1.       ]
 [1.        1.        1.        1.        1.       ]]
Batched Inputs torch.Size([100, 13])
Timestep :  7
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  1
Canvas : 
[[1.        1.        1.        1.        1.       ]
 [1.        1.        0.8878069 0.669951  1.       ]
 [1.        0.66339   0.4782969 0.604341  1.       ]
 [1.        1.        0.4782969 1.        1.       ]
 [1.        1.        1.        1.        1.       ]]
Next state :  (3, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.8878069  0.669951   1.        ]
 [1.         0.697051   0.43046721 0.5439069  1.        ]
 [1.         1.         0.43046721 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  8
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.8878069  0.669951   1.        ]
 [1.         0.697051   0.43046721 0.5439069  1.        ]
 [1.         1.         0.43046721 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.89902621 0.6029559  1.        ]
 [1.         0.6273459  0.38742049 0.48951621 1.        ]
 [1.         1.         0.38742049 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  9
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.89902621 0.6029559  1.        ]
 [1.         0.6273459  0.38742049 0.48951621 1.        ]
 [1.         1.         0.38742049 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.90912359 0.54266031 1.        ]
 [1.         0.66461131 0.34867844 0.44056459 1.        ]
 [1.         1.         0.34867844 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  10
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.90912359 0.54266031 1.        ]
 [1.         0.66461131 0.34867844 0.44056459 1.        ]
 [1.         1.         0.34867844 1.         1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91821123 0.58839428 0.9       ]
 [1.         0.66461131 0.3138106  0.39650813 0.9       ]
 [1.         1.         0.4138106  0.9        1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  11
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91821123 0.58839428 0.9       ]
 [1.         0.66461131 0.3138106  0.39650813 0.9       ]
 [1.         1.         0.4138106  0.9        1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.92639011 0.52955485 0.9       ]
 [1.         0.69815018 0.28242954 0.45685732 0.9       ]
 [1.         1.         0.37242954 0.91       1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  12
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.92639011 0.52955485 0.9       ]
 [1.         0.69815018 0.28242954 0.45685732 0.9       ]
 [1.         1.         0.37242954 0.91       1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.9337511  0.57659937 0.9       ]
 [1.         0.62833516 0.25418658 0.41117159 0.9       ]
 [1.         1.         0.33518658 0.919      1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  13
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.9337511  0.57659937 0.9       ]
 [1.         0.62833516 0.25418658 0.41117159 0.9       ]
 [1.         1.         0.33518658 0.919      1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.94037599 0.61893943 0.9       ]
 [1.         0.66550164 0.22876792 0.47005443 0.9       ]
 [1.         1.         0.30166792 0.9271     1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  14
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.94037599 0.61893943 0.9       ]
 [1.         0.66550164 0.22876792 0.47005443 0.9       ]
 [1.         1.         0.30166792 0.9271     1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.94633839 0.65704549 0.91      ]
 [1.         0.66550164 0.20589113 0.42304898 0.91      ]
 [1.         1.         0.37150113 0.83439    1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  15
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.94633839 0.65704549 0.91      ]
 [1.         0.66550164 0.20589113 0.42304898 0.91      ]
 [1.         1.         0.37150113 0.83439    1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.95170455 0.59134094 0.91      ]
 [1.         0.69895148 0.18530202 0.48074409 0.91      ]
 [1.         1.         0.33435102 0.850951   1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  16
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.95170455 0.59134094 0.91      ]
 [1.         0.69895148 0.18530202 0.48074409 0.91      ]
 [1.         1.         0.33435102 0.850951   1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.95653409 0.63220684 0.919     ]
 [1.         0.69895148 0.16677182 0.43266968 0.819     ]
 [1.         1.         0.40091592 0.7658559  1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  17
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.95653409 0.63220684 0.919     ]
 [1.         0.69895148 0.16677182 0.43266968 0.819     ]
 [1.         1.         0.40091592 0.7658559  1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96088068 0.56898616 0.8271    ]
 [1.         0.69895148 0.25009464 0.38940271 0.8371    ]
 [1.         1.         0.46082433 0.68927031 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  18
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96088068 0.56898616 0.8271    ]
 [1.         0.69895148 0.25009464 0.38940271 0.8371    ]
 [1.         1.         0.46082433 0.68927031 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96479262 0.61208754 0.74439   ]
 [1.         0.69895148 0.22508517 0.35046244 0.75339   ]
 [1.         1.         0.51474189 0.62034328 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  19
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96479262 0.61208754 0.74439   ]
 [1.         0.69895148 0.22508517 0.35046244 0.75339   ]
 [1.         1.         0.51474189 0.62034328 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96831335 0.65087879 0.669951  ]
 [1.         0.69895148 0.30257665 0.31541619 0.678051  ]
 [1.         1.         0.5632677  0.55830895 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  20
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.96831335 0.65087879 0.669951  ]
 [1.         0.69895148 0.30257665 0.31541619 0.678051  ]
 [1.         1.         0.5632677  0.55830895 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.97148202 0.68579091 0.6029559 ]
 [1.         0.69895148 0.27231899 0.28387458 0.6102459 ]
 [1.         1.         0.60694093 0.50247806 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  21
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.97148202 0.68579091 0.6029559 ]
 [1.         0.69895148 0.27231899 0.28387458 0.6102459 ]
 [1.         1.         0.60694093 0.50247806 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.97433382 0.71721182 0.54266031]
 [1.         0.69895148 0.24508709 0.25548712 0.54922131]
 [1.         1.         0.64624684 0.45223025 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  22
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.97433382 0.71721182 0.54266031]
 [1.         0.69895148 0.24508709 0.25548712 0.54922131]
 [1.         1.         0.64624684 0.45223025 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.87690044 0.64549064 0.54266031]
 [1.         0.72905633 0.22057838 0.32993841 0.54922131]
 [1.         1.         0.58162216 0.50700723 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  23
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.87690044 0.64549064 0.54266031]
 [1.         0.72905633 0.22057838 0.32993841 0.54922131]
 [1.         1.         0.58162216 0.50700723 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.88921039 0.68094157 0.54266031]
 [1.         0.6561507  0.19852054 0.29694457 0.54922131]
 [1.         1.         0.52345994 0.5563065  1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  24
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.88921039 0.68094157 0.54266031]
 [1.         0.6561507  0.19852054 0.29694457 0.54922131]
 [1.         1.         0.52345994 0.5563065  1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (2, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.90028935 0.71284742 0.48839428]
 [1.         0.6561507  0.27866849 0.26725011 0.59429918]
 [1.         1.         0.57111395 0.50067585 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  25
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.90028935 0.71284742 0.48839428]
 [1.         0.6561507  0.27866849 0.26725011 0.59429918]
 [1.         1.         0.57111395 0.50067585 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.35080164 0.2405251  0.63486926]
 [1.         1.         0.61400255 0.45060827 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  26
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.35080164 0.2405251  0.63486926]
 [1.         1.         0.61400255 0.45060827 1.        ]
 [1.         1.         0.9        1.         1.        ]]
Next state :  (3, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.41572148 0.31647259 0.57138233]
 [1.         1.         0.6526023  0.40554744 1.        ]
 [1.         1.         0.91       0.9        1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  27
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.41572148 0.31647259 0.57138233]
 [1.         1.         0.6526023  0.40554744 1.        ]
 [1.         1.         0.91       0.9        1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.47414933 0.38482533 0.5142441 ]
 [1.         1.         0.58734207 0.3649927  0.9       ]
 [1.         1.         0.919      0.81       1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  28
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.47414933 0.38482533 0.5142441 ]
 [1.         1.         0.58734207 0.3649927  0.9       ]
 [1.         1.         0.919      0.81       1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.5267344  0.4463428  0.46281969]
 [1.         1.         0.62860786 0.32849343 0.81      ]
 [1.         1.         0.9271     0.729      1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  29
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.5267344  0.4463428  0.46281969]
 [1.         1.         0.62860786 0.32849343 0.81      ]
 [1.         1.         0.9271     0.729      1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.57406096 0.40170852 0.41653772]
 [1.         1.         0.66574707 0.29564408 0.729     ]
 [1.         1.         0.93439    0.6561     1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  30
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.57406096 0.40170852 0.41653772]
 [1.         1.         0.66574707 0.29564408 0.729     ]
 [1.         1.         0.93439    0.6561     1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.61665486 0.46153767 0.37488395]
 [1.         1.         0.69917237 0.26607968 0.6561    ]
 [1.         1.         0.940951   0.59049    1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  31
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.61665486 0.46153767 0.37488395]
 [1.         1.         0.69917237 0.26607968 0.6561    ]
 [1.         1.         0.940951   0.59049    1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.65498937 0.5153839  0.33739555]
 [1.         1.         0.62925513 0.23947171 0.59049   ]
 [1.         1.         0.9468559  0.531441   1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  32
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.65498937 0.5153839  0.33739555]
 [1.         1.         0.62925513 0.23947171 0.59049   ]
 [1.         1.         0.9468559  0.531441   1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.68949044 0.56384551 0.403656  ]
 [1.         1.         0.66632962 0.21552454 0.531441  ]
 [1.         1.         0.95217031 0.4782969  1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  33
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.68949044 0.56384551 0.403656  ]
 [1.         1.         0.66632962 0.21552454 0.531441  ]
 [1.         1.         0.95217031 0.4782969  1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.72054139 0.50746096 0.3632904 ]
 [1.         1.         0.69969666 0.19397208 0.5782969 ]
 [1.         1.         0.95695328 0.43046721 1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  34
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.72054139 0.50746096 0.3632904 ]
 [1.         1.         0.69969666 0.19397208 0.5782969 ]
 [1.         1.         0.95695328 0.43046721 1.        ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.62972699 0.17457488 0.52046721]
 [1.         1.         0.96125795 0.38742049 1.        ]]
Batched Inputs torch.Size([100, 13])
Timestep :  35
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.62972699 0.17457488 0.52046721]
 [1.         1.         0.96125795 0.38742049 1.        ]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.66675429 0.25711739 0.46842049]
 [1.         1.         0.96513216 0.34867844 0.9       ]]
Batched Inputs torch.Size([100, 13])
Timestep :  36
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.66675429 0.25711739 0.46842049]
 [1.         1.         0.96513216 0.34867844 0.9       ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.70007886 0.33140565 0.42157844]
 [1.         1.         0.86861894 0.3138106  0.81      ]]
Batched Inputs torch.Size([100, 13])
Timestep :  37
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.74848725 0.55671486 0.32696136]
 [1.         1.         0.70007886 0.33140565 0.42157844]
 [1.         1.         0.86861894 0.3138106  0.81      ]]
Next state :  (3, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.77363853 0.50104338 0.29426522]
 [1.         1.         0.73007098 0.29826508 0.4794206 ]
 [1.         1.         0.88175705 0.28242954 0.829     ]]
Batched Inputs torch.Size([100, 13])
Timestep :  38
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.77363853 0.50104338 0.29426522]
 [1.         1.         0.73007098 0.29826508 0.4794206 ]
 [1.         1.         0.88175705 0.28242954 0.829     ]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.77363853 0.55093904 0.3648387 ]
 [1.         1.         0.73007098 0.26843858 0.43147854]
 [1.         1.         0.88175705 0.35418658 0.7461    ]]
Batched Inputs torch.Size([100, 13])
Timestep :  39
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.77363853 0.55093904 0.3648387 ]
 [1.         1.         0.73007098 0.26843858 0.43147854]
 [1.         1.         0.88175705 0.35418658 0.7461    ]]
Next state :  (3, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.49584513 0.32835483]
 [1.         1.         0.75706388 0.24159472 0.38833068]
 [1.         1.         0.89358134 0.31876792 0.77149   ]]
Batched Inputs torch.Size([100, 13])
Timestep :  40
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.49584513 0.32835483]
 [1.         1.         0.75706388 0.24159472 0.38833068]
 [1.         1.         0.89358134 0.31876792 0.77149   ]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.54626062 0.39551935]
 [1.         1.         0.75706388 0.21743525 0.34949761]
 [1.         1.         0.89358134 0.38689113 0.694341  ]]
Batched Inputs torch.Size([100, 13])
Timestep :  41
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.54626062 0.39551935]
 [1.         1.         0.75706388 0.21743525 0.34949761]
 [1.         1.         0.89358134 0.38689113 0.694341  ]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.59163456 0.35596741]
 [1.         1.         0.75706388 0.29569172 0.31454785]
 [1.         1.         0.89358134 0.44820202 0.6249069 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  42
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.59163456 0.35596741]
 [1.         1.         0.75706388 0.29569172 0.31454785]
 [1.         1.         0.89358134 0.44820202 0.6249069 ]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.6324711  0.42037067]
 [1.         1.         0.75706388 0.36612255 0.28309307]
 [1.         1.         0.89358134 0.50338182 0.56241621]]
Batched Inputs torch.Size([100, 13])
Timestep :  43
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.6324711  0.42037067]
 [1.         1.         0.75706388 0.36612255 0.28309307]
 [1.         1.         0.89358134 0.50338182 0.56241621]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.66922399 0.4783336 ]
 [1.         1.         0.75706388 0.32951029 0.25478376]
 [1.         1.         0.89358134 0.55304364 0.50617459]]
Batched Inputs torch.Size([100, 13])
Timestep :  44
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.79627468 0.66922399 0.4783336 ]
 [1.         1.         0.75706388 0.32951029 0.25478376]
 [1.         1.         0.89358134 0.55304364 0.50617459]]
Next state :  (3, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.81664721 0.70230159 0.43050024]
 [1.         1.         0.78135749 0.29655927 0.22930538]
 [1.         1.         0.90422321 0.49773927 0.55555713]]
Batched Inputs torch.Size([100, 13])
Timestep :  45
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.81664721 0.70230159 0.43050024]
 [1.         1.         0.78135749 0.29655927 0.22930538]
 [1.         1.         0.90422321 0.49773927 0.55555713]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.83498249 0.73207143 0.48745022]
 [1.         1.         0.70322174 0.26690334 0.20637485]
 [1.         1.         0.91380089 0.44796534 0.60000142]]
Batched Inputs torch.Size([100, 13])
Timestep :  46
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.83498249 0.73207143 0.48745022]
 [1.         1.         0.70322174 0.26690334 0.20637485]
 [1.         1.         0.91380089 0.44796534 0.60000142]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.85148424 0.75886429 0.4387052 ]
 [1.         1.         0.73289957 0.240213   0.18573736]
 [1.         1.         0.9224208  0.40316881 0.64000128]]
Batched Inputs torch.Size([100, 13])
Timestep :  47
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.85148424 0.75886429 0.4387052 ]
 [1.         1.         0.73289957 0.240213   0.18573736]
 [1.         1.         0.9224208  0.40316881 0.64000128]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.65960961 0.2161917  0.16716363]
 [1.         1.         0.93017872 0.36285193 0.67600115]]
Batched Inputs torch.Size([100, 13])
Timestep :  48
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.65960961 0.2161917  0.16716363]
 [1.         1.         0.93017872 0.36285193 0.67600115]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.69364865 0.29457253 0.15044726]
 [1.         1.         0.83716085 0.32656674 0.60840103]]
Batched Inputs torch.Size([100, 13])
Timestep :  49
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.69364865 0.29457253 0.15044726]
 [1.         1.         0.83716085 0.32656674 0.60840103]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.72428378 0.36511528 0.13540254]
 [1.         1.         0.85344476 0.29391006 0.54756093]]
Batched Inputs torch.Size([100, 13])
Timestep :  50
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.86633581 0.78297786 0.39483468]
 [1.         1.         0.72428378 0.36511528 0.13540254]
 [1.         1.         0.85344476 0.29391006 0.54756093]]
Next state :  (3, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.80468008 0.35535121]
 [1.         1.         0.65185541 0.32860375 0.12186228]
 [1.         1.         0.86810029 0.26451906 0.59280484]]
Batched Inputs torch.Size([100, 13])
Timestep :  51
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.80468008 0.35535121]
 [1.         1.         0.65185541 0.32860375 0.12186228]
 [1.         1.         0.86810029 0.26451906 0.59280484]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.82421207 0.41981609]
 [1.         1.         0.65185541 0.39574338 0.10967605]
 [1.         1.         0.86810029 0.33806715 0.53352435]]
Batched Inputs torch.Size([100, 13])
Timestep :  52
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.82421207 0.41981609]
 [1.         1.         0.65185541 0.39574338 0.10967605]
 [1.         1.         0.86810029 0.33806715 0.53352435]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.84179086 0.47783448]
 [1.         1.         0.65185541 0.45616904 0.09870845]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Batched Inputs torch.Size([100, 13])
Timestep :  53
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.74156267 0.43955485]
 [1.         0.6561507  0.87970223 0.84179086 0.47783448]
 [1.         1.         0.65185541 0.45616904 0.09870845]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Next state :  (2, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.76740641 0.49559937]
 [1.         0.6561507  0.87970223 0.85761178 0.43005103]
 [1.         1.         0.65185541 0.51055214 0.0888376 ]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Batched Inputs torch.Size([100, 13])
Timestep :  54
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.76740641 0.49559937]
 [1.         0.6561507  0.87970223 0.85761178 0.43005103]
 [1.         1.         0.65185541 0.51055214 0.0888376 ]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Next state :  (1, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.79066577 0.44603943]
 [1.         0.6561507  0.87970223 0.8718506  0.38704593]
 [1.         1.         0.65185541 0.51055214 0.0888376 ]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Batched Inputs torch.Size([100, 13])
Timestep :  55
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (1, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.79066577 0.44603943]
 [1.         0.6561507  0.87970223 0.8718506  0.38704593]
 [1.         1.         0.65185541 0.51055214 0.0888376 ]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Next state :  (2, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.78466554 0.34834134]
 [1.         1.         0.65185541 0.55949692 0.07995384]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Batched Inputs torch.Size([100, 13])
Timestep :  56
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.78466554 0.34834134]
 [1.         1.         0.65185541 0.55949692 0.07995384]
 [1.         1.         0.86810029 0.40426044 0.48017192]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.80619898 0.4135072 ]
 [1.         1.         0.65185541 0.50354723 0.07195846]
 [1.         1.         0.86810029 0.46383439 0.43215473]]
Batched Inputs torch.Size([100, 13])
Timestep :  57
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.80619898 0.4135072 ]
 [1.         1.         0.65185541 0.50354723 0.07195846]
 [1.         1.         0.86810029 0.46383439 0.43215473]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.80619898 0.4135072 ]
 [1.         1.         0.65185541 0.55319251 0.16476261]
 [1.         1.         0.86810029 0.51745095 0.38893925]]
Batched Inputs torch.Size([100, 13])
Timestep :  58
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.80619898 0.4135072 ]
 [1.         1.         0.65185541 0.55319251 0.16476261]
 [1.         1.         0.86810029 0.51745095 0.38893925]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.82557909 0.47215648]
 [1.         1.         0.65185541 0.49787326 0.14828635]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  59
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.81159919 0.50143549]
 [1.         0.6561507  0.87970223 0.82557909 0.47215648]
 [1.         1.         0.65185541 0.49787326 0.14828635]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Next state :  (2, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.83043927 0.55129194]
 [1.         0.6561507  0.87970223 0.84302118 0.42494083]
 [1.         1.         0.65185541 0.54808593 0.13345772]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  60
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.83043927 0.55129194]
 [1.         0.6561507  0.87970223 0.84302118 0.42494083]
 [1.         1.         0.65185541 0.54808593 0.13345772]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.84739534 0.59616274]
 [1.         0.6561507  0.87970223 0.75871906 0.38244675]
 [1.         1.         0.65185541 0.59327734 0.12011195]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  61
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.84739534 0.59616274]
 [1.         0.6561507  0.87970223 0.75871906 0.38244675]
 [1.         1.         0.65185541 0.59327734 0.12011195]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.86265581 0.53654647]
 [1.         0.6561507  0.87970223 0.78284715 0.34420208]
 [1.         1.         0.65185541 0.6339496  0.10810075]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  62
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.86265581 0.53654647]
 [1.         0.6561507  0.87970223 0.78284715 0.34420208]
 [1.         1.         0.65185541 0.6339496  0.10810075]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.87639023 0.58289182]
 [1.         0.6561507  0.87970223 0.70456244 0.30978187]
 [1.         1.         0.65185541 0.67055464 0.09729068]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  63
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.87639023 0.58289182]
 [1.         0.6561507  0.87970223 0.70456244 0.30978187]
 [1.         1.         0.65185541 0.67055464 0.09729068]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.88875121 0.52460264]
 [1.         0.6561507  0.87970223 0.73410619 0.27880368]
 [1.         1.         0.65185541 0.70349918 0.08756161]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  64
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.88875121 0.52460264]
 [1.         0.6561507  0.87970223 0.73410619 0.27880368]
 [1.         1.         0.65185541 0.70349918 0.08756161]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.66069557 0.25092331]
 [1.         1.         0.65185541 0.73314926 0.07880545]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Batched Inputs torch.Size([100, 13])
Timestep :  65
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (2, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.66069557 0.25092331]
 [1.         1.         0.65185541 0.73314926 0.07880545]
 [1.         1.         0.86810029 0.56570586 0.35004533]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.75983433 0.0709249 ]
 [1.         1.         0.86810029 0.60913527 0.3150408 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  66
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.75983433 0.0709249 ]
 [1.         1.         0.86810029 0.60913527 0.3150408 ]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.7838509  0.16383241]
 [1.         1.         0.86810029 0.54822174 0.28353672]]
Batched Inputs torch.Size([100, 13])
Timestep :  67
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.7838509  0.16383241]
 [1.         1.         0.86810029 0.54822174 0.28353672]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.80546581 0.24744917]
 [1.         1.         0.86810029 0.49339957 0.25518304]]
Batched Inputs torch.Size([100, 13])
Timestep :  68
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.69462602 0.32583098]
 [1.         1.         0.65185541 0.80546581 0.24744917]
 [1.         1.         0.86810029 0.49339957 0.25518304]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.82491923 0.22270425]
 [1.         1.         0.86810029 0.54405961 0.22966474]]
Batched Inputs torch.Size([100, 13])
Timestep :  69
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.82491923 0.22270425]
 [1.         1.         0.86810029 0.54405961 0.22966474]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.84242731 0.30043383]
 [1.         1.         0.86810029 0.58965365 0.20669827]]
Batched Inputs torch.Size([100, 13])
Timestep :  70
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.84242731 0.30043383]
 [1.         1.         0.86810029 0.58965365 0.20669827]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.85818458 0.37039045]
 [1.         1.         0.86810029 0.53068829 0.18602844]]
Batched Inputs torch.Size([100, 13])
Timestep :  71
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.72516342 0.39324788]
 [1.         1.         0.65185541 0.85818458 0.37039045]
 [1.         1.         0.86810029 0.53068829 0.18602844]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.77236612 0.3333514 ]
 [1.         1.         0.86810029 0.57761946 0.1674256 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  72
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.77236612 0.3333514 ]
 [1.         1.         0.86810029 0.57761946 0.1674256 ]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.79512951 0.40001626]
 [1.         1.         0.86810029 0.61985751 0.15068304]]
Batched Inputs torch.Size([100, 13])
Timestep :  73
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.79512951 0.40001626]
 [1.         1.         0.86810029 0.61985751 0.15068304]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.81561656 0.46001463]
 [1.         1.         0.86810029 0.55787176 0.13561473]]
Batched Inputs torch.Size([100, 13])
Timestep :  74
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.81561656 0.46001463]
 [1.         1.         0.86810029 0.55787176 0.13561473]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.8340549  0.51401317]
 [1.         1.         0.86810029 0.50208458 0.12205326]]
Batched Inputs torch.Size([100, 13])
Timestep :  75
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.8340549  0.51401317]
 [1.         1.         0.86810029 0.50208458 0.12205326]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.85064941 0.56261185]
 [1.         1.         0.86810029 0.55187613 0.10984793]]
Batched Inputs torch.Size([100, 13])
Timestep :  76
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.85064941 0.56261185]
 [1.         1.         0.86810029 0.55187613 0.10984793]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.86558447 0.60635067]
 [1.         1.         0.86810029 0.59668851 0.09886314]]
Batched Inputs torch.Size([100, 13])
Timestep :  77
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.86558447 0.60635067]
 [1.         1.         0.86810029 0.59668851 0.09886314]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.87902602 0.6457156 ]
 [1.         1.         0.86810029 0.53701966 0.08897683]]
Batched Inputs torch.Size([100, 13])
Timestep :  78
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.87902602 0.6457156 ]
 [1.         1.         0.86810029 0.53701966 0.08897683]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.89112342 0.68114404]
 [1.         1.         0.86810029 0.4833177  0.08007914]]
Batched Inputs torch.Size([100, 13])
Timestep :  79
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.89112342 0.68114404]
 [1.         1.         0.86810029 0.4833177  0.08007914]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.90201108 0.71302964]
 [1.         1.         0.86810029 0.43498593 0.07207123]]
Batched Inputs torch.Size([100, 13])
Timestep :  80
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.90201108 0.71302964]
 [1.         1.         0.86810029 0.43498593 0.07207123]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.91180997 0.74172667]
 [1.         1.         0.86810029 0.39148733 0.06486411]]
Batched Inputs torch.Size([100, 13])
Timestep :  81
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.91180997 0.74172667]
 [1.         1.         0.86810029 0.39148733 0.06486411]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.92062897 0.76755401]
 [1.         1.         0.86810029 0.3523386  0.0583777 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  82
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.65185541 0.92062897 0.76755401]
 [1.         1.         0.86810029 0.3523386  0.0583777 ]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.92856608 0.69079861]
 [1.         1.         0.78129026 0.31710474 0.05253993]]
Batched Inputs torch.Size([100, 13])
Timestep :  83
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.92856608 0.69079861]
 [1.         1.         0.78129026 0.31710474 0.05253993]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.93570947 0.72171875]
 [1.         1.         0.78129026 0.28539427 0.04728593]]
Batched Inputs torch.Size([100, 13])
Timestep :  84
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.93570947 0.72171875]
 [1.         1.         0.78129026 0.28539427 0.04728593]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.94213852 0.74954687]
 [1.         1.         0.78129026 0.35685484 0.04255734]]
Batched Inputs torch.Size([100, 13])
Timestep :  85
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.94213852 0.74954687]
 [1.         1.         0.78129026 0.35685484 0.04255734]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.94792467 0.77459218]
 [1.         1.         0.78129026 0.42116936 0.03830161]]
Batched Inputs torch.Size([100, 13])
Timestep :  86
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.94792467 0.77459218]
 [1.         1.         0.78129026 0.42116936 0.03830161]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.9531322  0.79713297]
 [1.         1.         0.78129026 0.37905242 0.03447145]]
Batched Inputs torch.Size([100, 13])
Timestep :  87
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.9531322  0.79713297]
 [1.         1.         0.78129026 0.37905242 0.03447145]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.95781898 0.81741967]
 [1.         1.         0.78129026 0.34114718 0.0310243 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  88
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.95781898 0.81741967]
 [1.         1.         0.78129026 0.34114718 0.0310243 ]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96203708 0.8356777 ]
 [1.         1.         0.78129026 0.40703246 0.02792187]]
Batched Inputs torch.Size([100, 13])
Timestep :  89
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96203708 0.8356777 ]
 [1.         1.         0.78129026 0.40703246 0.02792187]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96583338 0.85210993]
 [1.         1.         0.78129026 0.36632921 0.02512968]]
Batched Inputs torch.Size([100, 13])
Timestep :  90
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96583338 0.85210993]
 [1.         1.         0.78129026 0.36632921 0.02512968]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96925004 0.86689894]
 [1.         1.         0.78129026 0.32969629 0.02261672]]
Batched Inputs torch.Size([100, 13])
Timestep :  91
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.96925004 0.86689894]
 [1.         1.         0.78129026 0.32969629 0.02261672]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.97232503 0.88020904]
 [1.         1.         0.78129026 0.29672666 0.02035504]]
Batched Inputs torch.Size([100, 13])
Timestep :  92
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.68666987 0.97232503 0.88020904]
 [1.         1.         0.78129026 0.29672666 0.02035504]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.71800288 0.97509253 0.79218814]
 [1.         1.         0.70316123 0.267054   0.11831954]]
Batched Inputs torch.Size([100, 13])
Timestep :  93
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.71800288 0.97509253 0.79218814]
 [1.         1.         0.70316123 0.267054   0.11831954]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.74620259 0.97758328 0.81296933]
 [1.         1.         0.63284511 0.2403486  0.20648759]]
Batched Inputs torch.Size([100, 13])
Timestep :  94
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.74620259 0.97758328 0.81296933]
 [1.         1.         0.63284511 0.2403486  0.20648759]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.97982495 0.73167239]
 [1.         1.         0.5695606  0.21631374 0.28583883]]
Batched Inputs torch.Size([100, 13])
Timestep :  95
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.97982495 0.73167239]
 [1.         1.         0.5695606  0.21631374 0.28583883]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98184245 0.75850515]
 [1.         1.         0.5695606  0.19468236 0.25725494]]
Batched Inputs torch.Size([100, 13])
Timestep :  96
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98184245 0.75850515]
 [1.         1.         0.5695606  0.19468236 0.25725494]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98365821 0.78265464]
 [1.         1.         0.5695606  0.27521413 0.23152945]]
Batched Inputs torch.Size([100, 13])
Timestep :  97
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98365821 0.78265464]
 [1.         1.         0.5695606  0.27521413 0.23152945]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98529239 0.80438917]
 [1.         1.         0.5695606  0.24769271 0.2083765 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  98
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.77158233 0.98529239 0.80438917]
 [1.         1.         0.5695606  0.24769271 0.2083765 ]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.7944241  0.98676315 0.72395026]
 [1.         1.         0.51260454 0.22292344 0.18753885]]
Batched Inputs torch.Size([100, 13])
Timestep :  99
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.7944241  0.98676315 0.72395026]
 [1.         1.         0.51260454 0.22292344 0.18753885]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.81498169 0.98808683 0.65155523]
 [1.         1.         0.56134408 0.2006311  0.16878497]]
Batched Inputs torch.Size([100, 13])
Timestep :  100
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.81498169 0.98808683 0.65155523]
 [1.         1.         0.56134408 0.2006311  0.16878497]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.83348352 0.98927815 0.58639971]
 [1.         1.         0.50520968 0.18056799 0.15190647]]
Batched Inputs torch.Size([100, 13])
Timestep :  101
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.83348352 0.98927815 0.58639971]
 [1.         1.         0.50520968 0.18056799 0.15190647]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.85013517 0.99035034 0.52775974]
 [1.         1.         0.45468871 0.16251119 0.13671582]]
Batched Inputs torch.Size([100, 13])
Timestep :  102
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.85013517 0.99035034 0.52775974]
 [1.         1.         0.45468871 0.16251119 0.13671582]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.9913153  0.47498376]
 [1.         1.         0.50921984 0.14626007 0.12304424]]
Batched Inputs torch.Size([100, 13])
Timestep :  103
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.9913153  0.47498376]
 [1.         1.         0.50921984 0.14626007 0.12304424]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.99218377 0.52748539]
 [1.         1.         0.50921984 0.13163406 0.11073982]]
Batched Inputs torch.Size([100, 13])
Timestep :  104
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.99218377 0.52748539]
 [1.         1.         0.50921984 0.13163406 0.11073982]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.9929654  0.47473685]
 [1.         1.         0.50921984 0.21847066 0.09966584]]
Batched Inputs torch.Size([100, 13])
Timestep :  105
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.75264707 0.4539231 ]
 [1.         1.         0.86512165 0.9929654  0.47473685]
 [1.         1.         0.50921984 0.21847066 0.09966584]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.77738237 0.50853079]
 [1.         1.         0.86512165 0.89366886 0.42726316]
 [1.         1.         0.50921984 0.29662359 0.08969925]]
Batched Inputs torch.Size([100, 13])
Timestep :  106
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.77738237 0.50853079]
 [1.         1.         0.86512165 0.89366886 0.42726316]
 [1.         1.         0.50921984 0.29662359 0.08969925]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.79964413 0.55767771]
 [1.         1.         0.86512165 0.80430197 0.38453685]
 [1.         1.         0.50921984 0.36696123 0.08072933]]
Batched Inputs torch.Size([100, 13])
Timestep :  107
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.79964413 0.55767771]
 [1.         1.         0.86512165 0.80430197 0.38453685]
 [1.         1.         0.50921984 0.36696123 0.08072933]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.81967972 0.60190994]
 [1.         1.         0.86512165 0.72387177 0.34608316]
 [1.         1.         0.50921984 0.43026511 0.07265639]]
Batched Inputs torch.Size([100, 13])
Timestep :  108
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.81967972 0.60190994]
 [1.         1.         0.86512165 0.72387177 0.34608316]
 [1.         1.         0.50921984 0.43026511 0.07265639]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.83771175 0.64171894]
 [1.         1.         0.86512165 0.7514846  0.31147485]
 [1.         1.         0.50921984 0.4872386  0.06539076]]
Batched Inputs torch.Size([100, 13])
Timestep :  109
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.83771175 0.64171894]
 [1.         1.         0.86512165 0.7514846  0.31147485]
 [1.         1.         0.50921984 0.4872386  0.06539076]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.85394057 0.67754705]
 [1.         1.         0.86512165 0.67633614 0.28032736]
 [1.         1.         0.50921984 0.53851474 0.05885168]]
Batched Inputs torch.Size([100, 13])
Timestep :  110
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.85394057 0.67754705]
 [1.         1.         0.86512165 0.67633614 0.28032736]
 [1.         1.         0.50921984 0.53851474 0.05885168]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.86854651 0.70979234]
 [1.         1.         0.86512165 0.70870252 0.25229463]
 [1.         1.         0.50921984 0.58466326 0.05296651]]
Batched Inputs torch.Size([100, 13])
Timestep :  111
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.86854651 0.70979234]
 [1.         1.         0.86512165 0.70870252 0.25229463]
 [1.         1.         0.50921984 0.58466326 0.05296651]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.88169186 0.73881311]
 [1.         1.         0.86512165 0.63783227 0.22706516]
 [1.         1.         0.50921984 0.62619694 0.04766986]]
Batched Inputs torch.Size([100, 13])
Timestep :  112
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.88169186 0.73881311]
 [1.         1.         0.86512165 0.63783227 0.22706516]
 [1.         1.         0.50921984 0.62619694 0.04766986]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.89352268 0.7649318 ]
 [1.         1.         0.86512165 0.67404904 0.20435865]
 [1.         1.         0.50921984 0.66357724 0.04290287]]
Batched Inputs torch.Size([100, 13])
Timestep :  113
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.89352268 0.7649318 ]
 [1.         1.         0.86512165 0.67404904 0.20435865]
 [1.         1.         0.50921984 0.66357724 0.04290287]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.90417041 0.78843862]
 [1.         1.         0.86512165 0.70664414 0.18392278]
 [1.         1.         0.50921984 0.69721952 0.03861259]]
Batched Inputs torch.Size([100, 13])
Timestep :  114
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.90417041 0.78843862]
 [1.         1.         0.86512165 0.70664414 0.18392278]
 [1.         1.         0.50921984 0.69721952 0.03861259]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.73597973 0.1655305 ]
 [1.         1.         0.50921984 0.72749757 0.03475133]]
Batched Inputs torch.Size([100, 13])
Timestep :  115
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.73597973 0.1655305 ]
 [1.         1.         0.50921984 0.72749757 0.03475133]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.76238175 0.14897745]
 [1.         1.         0.50921984 0.75474781 0.0312762 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  116
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.76238175 0.14897745]
 [1.         1.         0.50921984 0.75474781 0.0312762 ]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.78614358 0.23407971]
 [1.         1.         0.50921984 0.67927303 0.02814858]]
Batched Inputs torch.Size([100, 13])
Timestep :  117
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.78614358 0.23407971]
 [1.         1.         0.50921984 0.67927303 0.02814858]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.80752922 0.31067174]
 [1.         1.         0.50921984 0.61134573 0.02533372]]
Batched Inputs torch.Size([100, 13])
Timestep :  118
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.80752922 0.31067174]
 [1.         1.         0.50921984 0.61134573 0.02533372]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.8267763  0.37960456]
 [1.         1.         0.50921984 0.55021115 0.02280035]]
Batched Inputs torch.Size([100, 13])
Timestep :  119
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.8267763  0.37960456]
 [1.         1.         0.50921984 0.55021115 0.02280035]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.84409867 0.44164411]
 [1.         1.         0.50921984 0.59519004 0.02052031]]
Batched Inputs torch.Size([100, 13])
Timestep :  120
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.84409867 0.44164411]
 [1.         1.         0.50921984 0.59519004 0.02052031]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.8596888  0.3974797 ]
 [1.         1.         0.50921984 0.63567104 0.01846828]]
Batched Inputs torch.Size([100, 13])
Timestep :  121
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.8596888  0.3974797 ]
 [1.         1.         0.50921984 0.63567104 0.01846828]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.87371992 0.45773173]
 [1.         1.         0.50921984 0.57210393 0.01662145]]
Batched Inputs torch.Size([100, 13])
Timestep :  122
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.91375337 0.70959476]
 [1.         1.         0.86512165 0.87371992 0.45773173]
 [1.         1.         0.50921984 0.57210393 0.01662145]]
Next state :  (3, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.92237803 0.63863528]
 [1.         1.         0.86512165 0.88634793 0.41195855]
 [1.         1.         0.50921984 0.61489354 0.01495931]]
Batched Inputs torch.Size([100, 13])
Timestep :  123
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.92237803 0.63863528]
 [1.         1.         0.86512165 0.88634793 0.41195855]
 [1.         1.         0.50921984 0.61489354 0.01495931]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.79771314 0.3707627 ]
 [1.         1.         0.50921984 0.65340418 0.01346338]]
Batched Inputs torch.Size([100, 13])
Timestep :  124
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (3, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.79771314 0.3707627 ]
 [1.         1.         0.50921984 0.65340418 0.01346338]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.81794182 0.43368643]
 [1.         1.         0.50921984 0.68806377 0.01211704]]
Batched Inputs torch.Size([100, 13])
Timestep :  125
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.81794182 0.43368643]
 [1.         1.         0.50921984 0.68806377 0.01211704]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.83614764 0.49031779]
 [1.         1.         0.50921984 0.61925739 0.01090534]]
Batched Inputs torch.Size([100, 13])
Timestep :  126
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.83614764 0.49031779]
 [1.         1.         0.50921984 0.61925739 0.01090534]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.85253288 0.44128601]
 [1.         1.         0.50921984 0.65733165 0.0098148 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  127
Predicted states :  torch.Size([9])
tensor([[0., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.85253288 0.44128601]
 [1.         1.         0.50921984 0.65733165 0.0098148 ]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.76727959 0.49715741]
 [1.         1.         0.50921984 0.69159849 0.00883332]]
Batched Inputs torch.Size([100, 13])
Timestep :  128
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.76727959 0.49715741]
 [1.         1.         0.50921984 0.69159849 0.00883332]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.79055163 0.44744167]
 [1.         1.         0.50921984 0.72243864 0.00794999]]
Batched Inputs torch.Size([100, 13])
Timestep :  129
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.79055163 0.44744167]
 [1.         1.         0.50921984 0.72243864 0.00794999]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.81149647 0.5026975 ]
 [1.         1.         0.50921984 0.65019477 0.00715499]]
Batched Inputs torch.Size([100, 13])
Timestep :  130
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.81149647 0.5026975 ]
 [1.         1.         0.50921984 0.65019477 0.00715499]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.83034682 0.55242775]
 [1.         1.         0.50921984 0.6851753  0.00643949]]
Batched Inputs torch.Size([100, 13])
Timestep :  131
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.83034682 0.55242775]
 [1.         1.         0.50921984 0.6851753  0.00643949]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.84731214 0.59718497]
 [1.         1.         0.50921984 0.61665777 0.00579554]]
Batched Inputs torch.Size([100, 13])
Timestep :  132
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.84731214 0.59718497]
 [1.         1.         0.50921984 0.61665777 0.00579554]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.86258092 0.63746648]
 [1.         1.         0.50921984 0.65499199 0.00521599]]
Batched Inputs torch.Size([100, 13])
Timestep :  133
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.86258092 0.63746648]
 [1.         1.         0.50921984 0.65499199 0.00521599]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.87632283 0.67371983]
 [1.         1.         0.50921984 0.68949279 0.00469439]]
Batched Inputs torch.Size([100, 13])
Timestep :  134
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.87632283 0.67371983]
 [1.         1.         0.50921984 0.68949279 0.00469439]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.88869055 0.70634785]
 [1.         1.         0.50921984 0.62054351 0.00422495]]
Batched Inputs torch.Size([100, 13])
Timestep :  135
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.88869055 0.70634785]
 [1.         1.         0.50921984 0.62054351 0.00422495]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.89982149 0.73571306]
 [1.         1.         0.50921984 0.65848916 0.00380246]]
Batched Inputs torch.Size([100, 13])
Timestep :  136
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.89982149 0.73571306]
 [1.         1.         0.50921984 0.65848916 0.00380246]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.90983934 0.76214176]
 [1.         1.         0.50921984 0.59264024 0.00342221]]
Batched Inputs torch.Size([100, 13])
Timestep :  137
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.90983934 0.76214176]
 [1.         1.         0.50921984 0.59264024 0.00342221]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.91885541 0.78592758]
 [1.         1.         0.50921984 0.63337622 0.00307999]]
Batched Inputs torch.Size([100, 13])
Timestep :  138
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.91885541 0.78592758]
 [1.         1.         0.50921984 0.63337622 0.00307999]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.92696987 0.80733482]
 [1.         1.         0.50921984 0.5700386  0.00277199]]
Batched Inputs torch.Size([100, 13])
Timestep :  139
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.92696987 0.80733482]
 [1.         1.         0.50921984 0.5700386  0.00277199]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.93427288 0.82660134]
 [1.         1.         0.50921984 0.51303474 0.00249479]]
Batched Inputs torch.Size([100, 13])
Timestep :  140
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.93427288 0.82660134]
 [1.         1.         0.50921984 0.51303474 0.00249479]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.94084559 0.84394121]
 [1.         1.         0.50921984 0.46173126 0.00224531]]
Batched Inputs torch.Size([100, 13])
Timestep :  141
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.94084559 0.84394121]
 [1.         1.         0.50921984 0.46173126 0.00224531]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.94676103 0.85954709]
 [1.         1.         0.50921984 0.41555814 0.00202078]]
Batched Inputs torch.Size([100, 13])
Timestep :  142
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.94676103 0.85954709]
 [1.         1.         0.50921984 0.41555814 0.00202078]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.95208493 0.87359238]
 [1.         1.         0.50921984 0.37400232 0.0018187 ]]
Batched Inputs torch.Size([100, 13])
Timestep :  143
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.95208493 0.87359238]
 [1.         1.         0.50921984 0.37400232 0.0018187 ]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.95687644 0.88623314]
 [1.         1.         0.50921984 0.43660209 0.00163683]]
Batched Inputs torch.Size([100, 13])
Timestep :  144
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.95687644 0.88623314]
 [1.         1.         0.50921984 0.43660209 0.00163683]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96118879 0.89760983]
 [1.         1.         0.50921984 0.49294188 0.00147315]]
Batched Inputs torch.Size([100, 13])
Timestep :  145
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96118879 0.89760983]
 [1.         1.         0.50921984 0.49294188 0.00147315]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96506991 0.90784884]
 [1.         1.         0.50921984 0.54364769 0.00132583]]
Batched Inputs torch.Size([100, 13])
Timestep :  146
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96506991 0.90784884]
 [1.         1.         0.50921984 0.54364769 0.00132583]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96856292 0.91706396]
 [1.         1.         0.50921984 0.48928292 0.00119325]]
Batched Inputs torch.Size([100, 13])
Timestep :  147
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.96856292 0.91706396]
 [1.         1.         0.50921984 0.48928292 0.00119325]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.97170663 0.82535756]
 [1.         1.         0.50921984 0.54035463 0.00107393]]
Batched Inputs torch.Size([100, 13])
Timestep :  148
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.86512165 0.97170663 0.82535756]
 [1.         1.         0.50921984 0.54035463 0.00107393]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.74535968e-01
  8.42821806e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 4.86319169e-01
  9.66533098e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  149
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.74535968e-01
  8.42821806e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 4.86319169e-01
  9.66533098e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.77082371e-01
  8.58539626e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 5.37687252e-01
  8.69879788e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  150
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.77082371e-01
  8.58539626e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 5.37687252e-01
  8.69879788e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.79374134e-01
  8.72685663e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 4.83918527e-01
  7.82891809e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  151
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.65121651e-01 9.79374134e-01
  8.72685663e-01]
 [1.00000000e+00 1.00000000e+00 5.09219837e-01 4.83918527e-01
  7.82891809e-04]]
Next state :  (4, 3)
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.78609486e-01 8.81436721e-01
  7.85417097e-01]
 [1.00000000e+00 1.00000000e+00 5.58297853e-01 4.35526674e-01
  7.04602628e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  152
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.78609486e-01 8.81436721e-01
  7.85417097e-01]
 [1.00000000e+00 1.00000000e+00 5.58297853e-01 4.35526674e-01
  7.04602628e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 8.93293048e-01
  7.06875387e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 3.91974007e-01
  6.34142366e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  153
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 8.93293048e-01
  7.06875387e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 3.91974007e-01
  6.34142366e-04]]
Next state :  (4, 4)
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.03963744e-01
  6.36187848e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 4.52776606e-01
  5.70728129e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  154
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.03963744e-01
  6.36187848e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 4.52776606e-01
  5.70728129e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.13567369e-01
  6.72569064e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.07498946e-01
  5.13655316e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  155
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.13567369e-01
  6.72569064e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.07498946e-01
  5.13655316e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.22210632e-01
  7.05312157e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.56749051e-01
  4.62289784e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  156
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.22210632e-01
  7.05312157e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.56749051e-01
  4.62289784e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.29989569e-01
  7.34780941e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01074146e-01
  4.16060806e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  157
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.29989569e-01
  7.34780941e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01074146e-01
  4.16060806e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.36990612e-01
  6.61302847e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.40966731e-01
  3.74454725e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  158
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.36990612e-01
  6.61302847e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.40966731e-01
  3.74454725e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.43291551e-01
  6.95172563e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.76870058e-01
  3.37009253e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  159
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.43291551e-01
  6.95172563e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.76870058e-01
  3.37009253e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.48962396e-01
  7.25655306e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.19183052e-01
  3.03308328e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  160
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.48962396e-01
  7.25655306e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.19183052e-01
  3.03308328e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.54066156e-01
  7.53089776e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.57264747e-01
  2.72977495e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  161
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.54066156e-01
  7.53089776e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.57264747e-01
  2.72977495e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.58659541e-01
  7.77780798e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01538272e-01
  2.45679745e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  162
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.58659541e-01
  7.77780798e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01538272e-01
  2.45679745e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.62793587e-01
  8.00002718e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.41384445e-01
  2.21111771e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  163
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.62793587e-01
  8.00002718e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.41384445e-01
  2.21111771e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.66514228e-01
  8.20002446e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.77246001e-01
  1.99000594e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  164
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.66514228e-01
  8.20002446e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.77246001e-01
  1.99000594e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.69862805e-01
  8.38002202e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.19521401e-01
  1.79100534e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  165
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.69862805e-01
  8.38002202e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.19521401e-01
  1.79100534e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.72876525e-01
  8.54201982e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.57569261e-01
  1.61190481e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  166
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.72876525e-01
  8.54201982e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.57569261e-01
  1.61190481e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.75588872e-01
  7.68781783e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01812334e-01
  1.45071433e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  167
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.75588872e-01
  7.68781783e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 6.01812334e-01
  1.45071433e-04]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.78029985e-01
  7.91903605e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.41631101e-01
  1.30564290e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  168
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.78029985e-01
  7.91903605e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.41631101e-01
  1.30564290e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.80226986e-01
  7.12713245e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.87467991e-01
  1.17507861e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  169
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.80226986e-01
  7.12713245e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.87467991e-01
  1.17507861e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.82204288e-01
  7.41441920e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.28721192e-01
  1.05757075e-04]]
Batched Inputs torch.Size([100, 13])
Timestep :  170
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.82204288e-01
  7.41441920e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.28721192e-01
  1.05757075e-04]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.83983859e-01
  6.67297728e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.75849073e-01
  9.51813671e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  171
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.83983859e-01
  6.67297728e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.75849073e-01
  9.51813671e-05]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.85585473e-01
  7.00567955e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.18264165e-01
  8.56632304e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  172
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.85585473e-01
  7.00567955e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 5.18264165e-01
  8.56632304e-05]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.87026926e-01
  7.30511160e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 4.66437749e-01
  7.70969073e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  173
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 8.90748537e-01 9.87026926e-01
  7.30511160e-01]
 [1.00000000e+00 1.00000000e+00 5.02468068e-01 4.66437749e-01
  7.70969073e-05]]
Next state :  (4, 3)
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.01673684e-01 9.88324233e-01
  6.57460044e-01]
 [1.00000000e+00 1.00000000e+00 5.52221261e-01 4.19793974e-01
  6.93872166e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  174
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.01673684e-01 9.88324233e-01
  6.57460044e-01]
 [1.00000000e+00 1.00000000e+00 5.52221261e-01 4.19793974e-01
  6.93872166e-05]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.11506315e-01 9.89491810e-01
  6.91714039e-01]
 [1.00000000e+00 1.00000000e+00 4.96999135e-01 3.77814577e-01
  6.24484949e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  175
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.11506315e-01 9.89491810e-01
  6.91714039e-01]
 [1.00000000e+00 1.00000000e+00 4.96999135e-01 3.77814577e-01
  6.24484949e-05]]
Crossing borders, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.20355684e-01 9.90542629e-01
  7.22542635e-01]
 [1.00000000e+00 1.00000000e+00 5.47299222e-01 3.40033119e-01
  5.62036454e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  176
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.20355684e-01 9.90542629e-01
  7.22542635e-01]
 [1.00000000e+00 1.00000000e+00 5.47299222e-01 3.40033119e-01
  5.62036454e-05]]
Hitting a wall, returning same state ...
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.28320115e-01 9.91488366e-01
  6.50288372e-01]
 [1.00000000e+00 1.00000000e+00 4.92569299e-01 3.06029807e-01
  5.05832809e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  177
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.28320115e-01 9.91488366e-01
  6.50288372e-01]
 [1.00000000e+00 1.00000000e+00 4.92569299e-01 3.06029807e-01
  5.05832809e-05]]
Next state :  (4, 2)
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.35488104e-01 9.92339529e-01
  6.50288372e-01]
 [1.00000000e+00 1.00000000e+00 4.43312370e-01 2.75426826e-01
  5.05832809e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  178
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.35488104e-01 9.92339529e-01
  6.50288372e-01]
 [1.00000000e+00 1.00000000e+00 4.43312370e-01 2.75426826e-01
  5.05832809e-05]]
Next state :  (4, 3)
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.41939293e-01 9.93105576e-01
  6.85259535e-01]
 [1.00000000e+00 1.00000000e+00 4.98981133e-01 2.47884144e-01
  4.55249528e-05]]
Batched Inputs torch.Size([100, 13])
Timestep :  179
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.00000000e+00 1.00000000e+00 1.00000000e+00 1.00000000e+00
  1.00000000e+00]
 [1.00000000e+00 1.00000000e+00 9.10260418e-01 8.99876085e-01
  5.72142376e-01]
 [1.00000000e+00 6.56150699e-01 8.79702233e-01 9.30140228e-01
  6.74771753e-01]
 [1.00000000e+00 1.00000000e+00 9.41939293e-01 9.93105576e-01
  6.85259535e-01]
 [1.00000000e+00 1.00000000e+00 4.98981133e-01 2.47884144e-01
  4.55249528e-05]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.89379502 0.61673358]
 [1.         1.         0.54908302 0.22309573 0.10004097]]
Batched Inputs torch.Size([100, 13])
Timestep :  180
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.89379502 0.61673358]
 [1.         1.         0.54908302 0.22309573 0.10004097]]
Next state :  (4, 4)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.90441552 0.65506022]
 [1.         1.         0.54908302 0.20078616 0.09003688]]
Batched Inputs torch.Size([100, 13])
Timestep :  181
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.90441552 0.65506022]
 [1.         1.         0.54908302 0.20078616 0.09003688]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.91397397 0.5895542 ]
 [1.         1.         0.54908302 0.28070754 0.08103319]]
Batched Inputs torch.Size([100, 13])
Timestep :  182
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.91397397 0.5895542 ]
 [1.         1.         0.54908302 0.28070754 0.08103319]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.92257657 0.63059878]
 [1.         1.         0.54908302 0.25263679 0.07292987]]
Batched Inputs torch.Size([100, 13])
Timestep :  183
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.92257657 0.63059878]
 [1.         1.         0.54908302 0.25263679 0.07292987]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.93031891 0.5675389 ]
 [1.         1.         0.54908302 0.32737311 0.06563688]]
Batched Inputs torch.Size([100, 13])
Timestep :  184
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.93031891 0.5675389 ]
 [1.         1.         0.54908302 0.32737311 0.06563688]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.93728702 0.61078501]
 [1.         1.         0.54908302 0.2946358  0.05907319]]
Batched Inputs torch.Size([100, 13])
Timestep :  185
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 4)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.94774536 0.93728702 0.61078501]
 [1.         1.         0.54908302 0.2946358  0.05907319]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.95297083 0.94355832 0.54970651]
 [1.         1.         0.49417472 0.26517222 0.05316587]]
Batched Inputs torch.Size([100, 13])
Timestep :  186
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.95297083 0.94355832 0.54970651]
 [1.         1.         0.49417472 0.26517222 0.05316587]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.95767374 0.94920249 0.59473586]
 [1.         1.         0.54475725 0.238655   0.14784929]]
Batched Inputs torch.Size([100, 13])
Timestep :  187
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.95767374 0.94920249 0.59473586]
 [1.         1.         0.54475725 0.238655   0.14784929]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96190637 0.95428224 0.53526227]
 [1.         1.         0.49028152 0.2147895  0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  188
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96190637 0.95428224 0.53526227]
 [1.         1.         0.49028152 0.2147895  0.13306436]]
Next state :  (4, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96571573 0.85885401 0.53526227]
 [1.         1.         0.44125337 0.19331055 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  189
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96571573 0.85885401 0.53526227]
 [1.         1.         0.44125337 0.19331055 0.13306436]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96914416 0.87296861 0.53526227]
 [1.         0.9        0.39712803 0.17397949 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  190
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.96914416 0.87296861 0.53526227]
 [1.         0.9        0.39712803 0.17397949 0.13306436]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97222974 0.78567175 0.53526227]
 [1.         0.91       0.35741523 0.15658154 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  191
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97222974 0.78567175 0.53526227]
 [1.         0.91       0.35741523 0.15658154 0.13306436]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97500677 0.70710458 0.53526227]
 [1.         0.819      0.32167371 0.14092339 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  192
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  1
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97500677 0.70710458 0.53526227]
 [1.         0.819      0.32167371 0.14092339 0.13306436]]
Crossing borders, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97750609 0.63639412 0.53526227]
 [1.         0.8371     0.28950634 0.12683105 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  193
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97750609 0.63639412 0.53526227]
 [1.         0.8371     0.28950634 0.12683105 0.13306436]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97975548 0.57275471 0.53526227]
 [1.         0.75339    0.2605557  0.11414794 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  194
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.97975548 0.57275471 0.53526227]
 [1.         0.75339    0.2605557  0.11414794 0.13306436]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.98177994 0.51547924 0.53526227]
 [1.         0.778051   0.23450013 0.10273315 0.13306436]]
Batched Inputs torch.Size([100, 13])
Timestep :  195
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.98177994 0.51547924 0.53526227]
 [1.         0.778051   0.23450013 0.10273315 0.13306436]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.98360194 0.56393131 0.58173605]
 [1.         0.778051   0.21105012 0.09245984 0.11975792]]
Batched Inputs torch.Size([100, 13])
Timestep :  196
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 1.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.98360194 0.56393131 0.58173605]
 [1.         0.778051   0.21105012 0.09245984 0.11975792]]
Next state :  (4, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.88524175 0.50753818 0.58173605]
 [1.         0.8002459  0.18994511 0.18321385 0.11975792]]
Batched Inputs torch.Size([100, 13])
Timestep :  197
Predicted states :  torch.Size([9])
tensor([[1., 1., 1.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 2)
Action :  3
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.88524175 0.50753818 0.58173605]
 [1.         0.8002459  0.18994511 0.18321385 0.11975792]]
Next state :  (4, 3)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.89671757 0.55678436 0.62356244]
 [1.         0.8002459  0.1709506  0.16489247 0.10778213]]
Batched Inputs torch.Size([100, 13])
Timestep :  198
Predicted states :  torch.Size([9])
tensor([[1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  0
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.89671757 0.55678436 0.62356244]
 [1.         0.8002459  0.1709506  0.16489247 0.10778213]]
Hitting a wall, returning same state ...
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.90704582 0.50110593 0.5612062 ]
 [1.         0.8002459  0.25385554 0.14840322 0.09700392]]
Batched Inputs torch.Size([100, 13])
Timestep :  199
Predicted states :  torch.Size([9])
tensor([[1., 1., 0.],
        [0., 0., 0.],
        [1., 0., 1.]], device='cuda:0')
##### TAKING a step ... ######
Current state :  (4, 3)
Action :  2
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.90704582 0.50110593 0.5612062 ]
 [1.         0.8002459  0.25385554 0.14840322 0.09700392]]
Next state :  (4, 2)
Canvas : 
[[1.         1.         1.         1.         1.        ]
 [1.         1.         0.91026042 0.89987609 0.57214238]
 [1.         0.6561507  0.87970223 0.93014023 0.67477175]
 [1.         1.         0.91634123 0.45099533 0.5612062 ]
 [1.         0.72022131 0.22846998 0.1335629  0.09700392]]
Batched Inputs torch.Size([100, 13])
